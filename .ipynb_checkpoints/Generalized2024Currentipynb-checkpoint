{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9146e3dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# %matplotlib ipympl \n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import csv\n",
    "import datetime\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.stats import multivariate_normal\n",
    "from scipy.stats import norm\n",
    "from scipy.stats import boxcox\n",
    "from scipy.stats import yeojohnson"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9a95b980",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load all data into dataframe\n",
    "def load_data(path, file_names, aliases):\n",
    "    dates = {}\n",
    "    for data_set_idx in range(len(data_files)):\n",
    "        cur_alias = aliases[data_set_idx]\n",
    "        with open(path + data_files[data_set_idx] + '.csv', newline='') as csvfile:\n",
    "            spamreader = csv.reader(csvfile, delimiter=',', quotechar='|')\n",
    "            spamreader.__next__()\n",
    "            for row in spamreader:\n",
    "                try:\n",
    "                    cur_date = datetime.datetime.strptime(row[0], '%m/%d/%Y')\n",
    "\n",
    "                except Exception as e: \n",
    "                   continue\n",
    "                if not cur_date in dates:\n",
    "                    dates[cur_date] = {}\n",
    "#                     # need to generalize here\n",
    "#                 if data_set_idx == 0 or data_set_idx == 2:\n",
    "#                     dates[cur_date][cur_alias] = float(row[4])\n",
    "#                 elif data_set_idx == 1 or data_set_idx == 3 or data_set_idx == 4 or data_set_idx == 5:\n",
    "                try:\n",
    "                    dates[cur_date][cur_alias] = float(row[1])\n",
    "                except:\n",
    "                    print(row[1])\n",
    "                    print(cur_alias)\n",
    "                    print(row)\n",
    "                    \n",
    "\n",
    "    df = pd.DataFrame.from_dict(dates, orient='index')\n",
    "    # df.columns = aliases\n",
    "    df.reset_index(inplace=True)\n",
    "    df = df.rename(columns = {'index':'Date'})\n",
    "    df = df.sort_values('Date')\n",
    "    df = df.reset_index(drop=True)\n",
    "    return df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b1191f6f",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# not_null = df.query(baseline_asset + \".notnull()\")\n",
    "# not_null.reset_index(drop = True, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d9cc06b2-3eea-4c50-990a-43c93913f4bf",
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_div_data(asset_list, file_list):\n",
    "    div_data = {}\n",
    "    for asset, file_path in zip(asset_list, file_list):\n",
    "        # Initialize data structure for the asset\n",
    "        div_data[asset] = {\"payment_date\": set(), \"ex_date\": set(), \"amount\": {}}\n",
    "        \n",
    "        # Read CSV file into DataFrame\n",
    "        if file_path != None:\n",
    "            df = pd.read_csv(file_path + \".csv\", delimiter=',', header=0)\n",
    "            \n",
    "            # Iterate over rows in the DataFrame\n",
    "            for index, row in df.iterrows():\n",
    "                # Extract relevant data\n",
    "                ex_date = row[\"Ex/EFF Date\"]\n",
    "                cash_amount = row[\"Cash Amount\"]\n",
    "                payment_date = row[\"Payment Date\"]\n",
    "                \n",
    "                # Update div_data with extracted data\n",
    "                div_data[asset][\"ex_date\"].add(ex_date)\n",
    "                div_data[asset][\"payment_date\"].add(payment_date)\n",
    "                div_data[asset][\"amount\"][ex_date] = cash_amount\n",
    "            \n",
    "    return div_data\n",
    "\n",
    "\n",
    "def get_x_days_ret(asset, df, div_data, distance, idx):\n",
    "    start_idx = 0\n",
    "    end_idx = 0\n",
    "    if distance < 0:\n",
    "        distance = abs(distance)\n",
    "        start_idx = idx - distance\n",
    "        end_idx = idx + 1\n",
    "    else:\n",
    "        start_idx = idx\n",
    "        end_idx = idx + distance + 1\n",
    "        \n",
    "    num_shares = 1\n",
    "    dollars = 0\n",
    "    for i in range(start_idx, end_idx):\n",
    "        if df.iloc[i][\"Date\"] in div_data[\"payment_date\"]:\n",
    "            num_shares += dollars / df.iloc[i][asset]\n",
    "            dollars = 0\n",
    "        if df.iloc[i][\"Date\"] in div_data[\"ex_date\"]:\n",
    "            dollars += div_data[\"amount\"][df.iloc[i][\"Date\"]] * num_shares\n",
    "    final_val = num_shares * df.iloc[end_idx - 1][asset] + dollars\n",
    "    start_val = df.iloc[start_idx][asset]\n",
    "    return (final_val - start_val) / start_val\n",
    "            \n",
    "            \n",
    "            \n",
    "    \n",
    "\n",
    "def add_correlaries_div(cor_assets, cor_days_out, pred_distance, df, assets, div_data):\n",
    "    # stores percent changes from past x days \n",
    "    cors = [[] for i in range(len(cor_assets))]\n",
    "    # stores percent changes for x future days for each asset\n",
    "    futs = {}\n",
    "    for a in assets:\n",
    "        futs[a] = []\n",
    "    \n",
    "    # iterate through all data points\n",
    "    for idx, row in df.iterrows():\n",
    "        # past data points\n",
    "        for alias_idx, (asset, days_out) in enumerate(zip(cor_assets, cor_days_out)):\n",
    "            if idx > days_out: # check for enough data\n",
    "                # get percent change\n",
    "                time_period_change = get_x_days_ret(asset, df, div_data[asset], -days_out, idx)  \n",
    "                cors[alias_idx].append(time_period_change)\n",
    "            else:\n",
    "                cors[alias_idx].append(None)\n",
    "        \n",
    "        #future data\n",
    "        for asset in assets:\n",
    "            cur_price = row[asset]\n",
    "            if idx + pred_distance < df.shape[0] and not pd.isna(cur_price) and not pd.isna(df.iloc[idx + pred_distance][asset]):\n",
    "                time_period_change = get_x_days_ret(asset, df, div_data[asset], pred_distance, idx)  \n",
    "                futs[asset].append(time_period_change) \n",
    "            else:\n",
    "                futs[asset].append(None)\n",
    "    # input into data frame\n",
    "    for idx, (asset, days_out) in enumerate(zip(cor_assets, cor_days_out)):\n",
    "        name = asset + \"_\" + str(days_out) + \"_dys\"\n",
    "        df.insert(df.shape[1], name, cors[idx], True)\n",
    "    \n",
    "    for asset in futs.keys():\n",
    "        name = asset + \"_fut_\" + str(pred_distance) + \"dys\"\n",
    "        df.insert(df.shape[1], name, futs[asset], True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9cca94d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "# adds correlation metrix to dataframe\n",
    "def add_correlaries(cor_assets, cor_days_out, pred_distance, df, assets):\n",
    "    # stores percent changes from past x days \n",
    "    cors = [[] for i in range(len(cor_assets))]\n",
    "    # stores percent changes for x future days for each asset\n",
    "    futs = {}\n",
    "    for a in assets:\n",
    "        futs[a] = []\n",
    "    \n",
    "    # iterate through all data points\n",
    "    for idx, row in df.iterrows():\n",
    "        # past data points\n",
    "        for alias_idx, (asset, days_out) in enumerate(zip(cor_assets, cor_days_out)):\n",
    "            cur_price = row[asset]\n",
    "            if idx > days_out: # check for enough data\n",
    "                # get percent change\n",
    "                last_time_period = df.loc[idx - days_out - 1].at[asset]\n",
    "                time_period_change = (cur_price - last_time_period)/last_time_period\n",
    "                cors[alias_idx].append(time_period_change)           \n",
    "            else:\n",
    "                cors[alias_idx].append(None)\n",
    "        \n",
    "        #future data\n",
    "        for asset in assets:\n",
    "            cur_price = row[asset]\n",
    "            if idx + pred_distance < df.shape[0] and not pd.isna(cur_price) and not pd.isna(df.iloc[idx + pred_distance].at[asset]):\n",
    "                fut_val = df.iloc[idx + pred_distance].at[asset]\n",
    "                time_period_change = (fut_val - cur_price)/cur_price  \n",
    "                futs[asset].append(time_period_change) \n",
    "            else:\n",
    "                futs[asset].append(None)\n",
    "    # input into data frame\n",
    "    for idx, (asset, days_out) in enumerate(zip(cor_assets, cor_days_out)):\n",
    "        name = asset + \"_\" + str(days_out) + \"_dys\"\n",
    "        df.insert(df.shape[1], name, cors[idx], True)\n",
    "    \n",
    "    for asset in futs.keys():\n",
    "        name = asset + \"_fut_\" + str(pred_distance) + \"dys\"\n",
    "        df.insert(df.shape[1], name, futs[asset], True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "302592d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_pred_differences(pred_distance, baseline_asset, assets, df):\n",
    "    for idx, asset in enumerate(assets):\n",
    "#       for idx2, asset2 in enumerate(assets[idx + 1: ]): if you want all differences\n",
    "        if asset != baseline_asset:\n",
    "            change_asset = df[asset + \"_fut_\" + str(pred_distance) + \"dys\"]\n",
    "            change_baseline = df[baseline_asset + \"_fut_\" + str(pred_distance) + \"dys\"]\n",
    "            diff = change_asset - change_baseline \n",
    "            df.insert(df.shape[1], asset + \"_\" + baseline_asset + \"_\" + str(pred_distance) + \"dys_diff\", diff, True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8c42dcc7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# not_null.iloc[5700:5750,[0, 7,8, 9, 10,11,12,13,14,15,16,17,18,19,20]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "38b6777e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# not_null.iloc[-160:,0: 10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0a440989",
   "metadata": {},
   "outputs": [],
   "source": [
    "# not_null.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f6a6e141",
   "metadata": {},
   "outputs": [],
   "source": [
    "# #use sklearn.preprocessing.PowerTransformer instead\n",
    "\n",
    "# plt.figure()\n",
    "\n",
    "# column_name = 'sp_20_dys'\n",
    "# column = not_null[column_name] \n",
    "# column = column[~np.isnan(column)]\n",
    "# print(column)\n",
    "# # column += np.array([1 for i in range(len(column))])\n",
    "# # print(column)\n",
    "# plt.figure()\n",
    "# plt.hist(column , color = 'red', bins = 500, density=True)\n",
    "# mean = np.mean(column)\n",
    "# std = np.std(column)\n",
    "# print(mean)\n",
    "# print(std)\n",
    "# x_axis = np.arange(-.3, .3, 0.01)\n",
    "\n",
    "# plt.plot(x_axis, norm.pdf(x_axis, mean, std))\n",
    "\n",
    "\n",
    "# plt.figure()\n",
    "# plt.hist(yeojohnson(column)[0] , color = 'red', bins = 500, density=True)\n",
    "# mean = np.mean(yeojohnson(column)[0])\n",
    "# std = np.std(yeojohnson(column)[0])\n",
    "# print(mean)\n",
    "# print(std)\n",
    "# x_axis = np.arange(-.3, .3, 0.01)\n",
    "\n",
    "# plt.plot(x_axis, norm.pdf(x_axis, mean, std))\n",
    "# # plt.hist(np.log(sp_not_null[column_name] + np.array([1 for i in range(len(sp_not_null[column_name]))])) , color = 'red', bins = 500, density=True)\n",
    "# # mean = np.mean(np.log(sp_not_null[column_name] + np.array([1 for i in range(len(sp_not_null[column_name]))])))\n",
    "# # std = np.std(np.log(sp_not_null[column_name] + np.array([1 for i in range(len(sp_not_null[column_name]))])))\n",
    "\n",
    "\n",
    "\n",
    "# # column += np.array([1 for i in range(len(column))])\n",
    "# # column = np.log(column)\n",
    "# # plt.figure()\n",
    "# # plt.hist(yeojohnson(column)[0] , color = 'red', bins = 500, density=True)\n",
    "# # mean = np.mean(yeojohnson(column)[0])\n",
    "# # std = np.std(yeojohnson(column)[0])\n",
    "# # print(mean)\n",
    "# # print(std)\n",
    "# # x_axis = np.arange(-.3, .3, 0.01)\n",
    "\n",
    "# plt.plot(x_axis, norm.pdf(x_axis, mean, std))\n",
    "# # plt.hist(sp_not_null['sp_fut_2wks'], color = 'red', bins = 500)\n",
    "# # plt.hist(sp_not_null['re_fut_2wks'], color = 'green', bins = 500, alpha = .5,)\n",
    "# # plt.hist(sp_not_null['bnd_fut_2wks'], color = 'blue', bins = 500, alpha = .5,)\n",
    "# # plt.hist(sp_not_null['gld_fut_2wks'], color = 'yellow', bins = 500, alpha = .5,)\n",
    "# # plt.hist(sp_not_null['eu_fut_2wks'], color = 'green', bins = 500, alpha = .5,)\n",
    "# # plt.hist(sp_not_null['jp_fut_2wks'], color = 'blue', bins = 500, alpha = .5,)\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "13a2a30e",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# fig = plt.figure()\n",
    "# ax = fig.add_subplot(projection = '3d')\n",
    "\n",
    "# ax.scatter(not_null[\"sp_last_month\"], not_null[\"re_last_month\"], not_null[\"re_sp_2wk_diff\"])\n",
    "# ax.set_xlabel('sp_last_month')\n",
    "# ax.set_ylabel('re_last_month')\n",
    "# ax.set_zlabel('re_sp_2wk_diff')\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6c4b85e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_rvs(baseline, df, aliases, pred_distance, print_mats=False):\n",
    "    rvs = {}\n",
    "    \n",
    "    valid_cols = []\n",
    "    for col in df.columns:\n",
    "        if not col in aliases and col != \"Date\" and not \"diff\" in col and not \"fut\" in col:\n",
    "            valid_cols.append(col)\n",
    "\n",
    "    valid_cols.append(None)\n",
    "    \n",
    "    for asset in aliases:\n",
    "        if asset != baseline:\n",
    "            valid_cols[-1] = (asset + \"_\" + baseline + \"_\" + str(pred_distance) + \"dys_diff\")\n",
    "\n",
    "            cov_mat = df[valid_cols]\n",
    "            # trying out multiplying every times 100 to get larger covariacnce and then maybe wont get the issue with comuns being \n",
    "            # linera\n",
    "            # cov_mat = cov_mat.multiply(100)\n",
    "            cov_matrix = pd.DataFrame.cov(cov_mat)\n",
    "            cov_mat = cov_mat.cov()\n",
    "            cov_mat = cov_mat.to_numpy()\n",
    "            if print_mats:\n",
    "                print(asset)\n",
    "                print(cov_matrix)\n",
    "\n",
    "\n",
    "            # means of values\n",
    "            means = []\n",
    "            for col in valid_cols:\n",
    "                means.append(np.mean(df[col]))\n",
    "            if print_mats:\n",
    "                print(means)\n",
    "\n",
    "            rv = multivariate_normal(mean=means, cov=cov_mat, allow_singular=True)\n",
    "            rvs[asset] = rv\n",
    "    return rvs\n",
    "        \n",
    "\n",
    "\n",
    "def predict(asset, baseline, rv, inputs, get_plots=False, do_print=False, get_50_pt = False):\n",
    "    START = -.25\n",
    "    STOP = .25\n",
    "    INCREMENT = .00005\n",
    "\n",
    "    probs = []\n",
    "   \n",
    "    x = np.arange(START, STOP, INCREMENT)\n",
    "    inputs.append(None)\n",
    "    for val in x:\n",
    "        # make an array with all the current values\n",
    "        # insert past month performance\n",
    "        #\"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\", future difference\n",
    "        inputs[-1] = val\n",
    "        probs.append(rv.pdf(inputs))\n",
    "\n",
    "\n",
    "    cdf = []\n",
    "    for idx in range(x.size - 1):\n",
    "        cur_prob = probs[idx]\n",
    "        next_prob = probs[idx + 1]\n",
    "        rieman_sum = min(cur_prob, next_prob) * INCREMENT\n",
    "        rieman_sum += max(cur_prob, next_prob) - min(cur_prob, next_prob) * INCREMENT / 2\n",
    "        if len(cdf) > 0:\n",
    "            cdf.append(rieman_sum + cdf[-1])\n",
    "        else:\n",
    "            cdf.append(rieman_sum)\n",
    "                                 \n",
    "    if get_plots:\n",
    "        fig1 = plt.figure()\n",
    "        ax = fig1.add_subplot(111)\n",
    "        plt.title(\"pdf\")\n",
    "        plt.xlabel(\"difference between performance of \" + asset + \" and \" + baseline)\n",
    "        plt.ylabel(\"probability\")\n",
    "        ax.plot(x, probs/cdf[-1])\n",
    "        plt.show()\n",
    "\n",
    "    for idx in range(len(cdf)):\n",
    "        cdf[idx] /= cdf[-1]\n",
    "\n",
    "    if get_plots:\n",
    "        fig2 = plt.figure()\n",
    "        ax = fig2.add_subplot(111)\n",
    "        plt.title(\"cdf\")\n",
    "        plt.xlabel(\"difference between performance of \" + asset + \" and \" + baseline)\n",
    "        plt.ylabel(\"probability\")\n",
    "        ax.plot(x[:-1], cdf)\n",
    "        plt.show() \n",
    "        \n",
    "    if get_50_pt:\n",
    "        # find 50% point\n",
    "        cur_prob = 0\n",
    "        idx = 0\n",
    "        while(cur_prob < .5):\n",
    "            cur_prob = cdf[idx]\n",
    "            idx += 1\n",
    "        fiftyfiftypt = x[idx]\n",
    "        if do_print:\n",
    "            print(\"50 50 change to be above or below\")\n",
    "            print(x[idx])\n",
    "\n",
    "\n",
    "    #find expected value\n",
    "    expected_value = 0\n",
    "    for idx in range(len(cdf)):\n",
    "        if idx == 0:\n",
    "            expected_value += cdf[idx] * x[idx]\n",
    "        else:\n",
    "            cur_prob = cdf[idx - 1]\n",
    "            next_prob = cdf[idx]\n",
    "            actual_prob = next_prob - cur_prob\n",
    "            expected_value += actual_prob * x[idx]\n",
    "                                 \n",
    "    if do_print:\n",
    "        print(\"Expected Value\")\n",
    "        print(expected_value)\n",
    "                                 \n",
    "    if get_50_pt:\n",
    "        return fiftyfiftypt, expected_value\n",
    "    else:\n",
    "        return expected_value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3af092e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "def test_preds(assets, baseline, pred_distance, df_test, df_train):\n",
    "    rvs = get_rvs(baseline, df_train, assets, pred_distance)\n",
    "    preds = {}\n",
    "    actuals = {}\n",
    "    for asset in assets:\n",
    "        if asset != baseline:\n",
    "            preds[asset] = []\n",
    "            actuals[asset] = []\n",
    "    \n",
    "    pred_columns = []\n",
    "    for col_idx, col in enumerate(df_test.columns):\n",
    "        if not col in aliases and col != \"Date\" and not \"diff\" in col and not \"fut\" in col:\n",
    "            pred_columns.append(col_idx)\n",
    "            \n",
    "            \n",
    "    print('start')\n",
    "    for idx, row in df_test.iterrows():\n",
    "        for asset in assets:\n",
    "            if asset != baseline:\n",
    "#                 print(asset)\n",
    "                col_name = asset + \"_\" + baseline  + \"_\" + str(pred_distance) + \"dys_diff\"\n",
    "                actual = row[col_name]\n",
    "                actuals[asset].append(actual)\n",
    "#                 print(actual)\n",
    "                columns = []\n",
    "                pred_input = df_test.iloc[idx, pred_columns]\n",
    "                if not pred_input.isnull().any():\n",
    "                    prediction = predict(asset, baseline, rvs[asset], pred_input.tolist(), get_plots=False)\n",
    "                    preds[asset].append(prediction)\n",
    "                    # print(prediction)\n",
    "                else:\n",
    "                    preds[asset].append(None)\n",
    "#                     print(None)\n",
    "#                 print(\"---------\")\n",
    "        if idx % 10== 0:\n",
    "            print(idx)\n",
    "\n",
    "    return preds, actuals            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "b9560539",
   "metadata": {},
   "outputs": [],
   "source": [
    "# inputs here\n",
    "\n",
    "# path = 'C:\\\\Users\\\\plant\\\\\n",
    "path = ''\n",
    "\n",
    "baseline_asset = 'sp'\n",
    "\n",
    "file_SP = 'SPY'  \n",
    "div_SP = 'SPYDividend'\n",
    "file_RE = 'IYR'\n",
    "div_RE = 'IYRDividend'\n",
    "file_BND = 'isharesBondIndexSince2003'\n",
    "div_BND = 'USAggBondDividend'\n",
    "file_EU = 'USD_EURHistoricalData'\n",
    "div_EU = None\n",
    "file_JP = 'USD_JPYHistoricalData'\n",
    "div_JP = None\n",
    "file_GLD = 'GoldFuturesHistoricalData'\n",
    "div_GLD = None\n",
    "file_MID = 'IJH'\n",
    "div_MID = 'IJHDividend'\n",
    "file_SML = 'IJR'\n",
    "div_SML = 'IJRDividend'\n",
    "file_RUT = 'IWM'\n",
    "div_RUT = 'IWMDividend'\n",
    "file_EST = 'EZU'\n",
    "div_EST = 'EZUDividend'\n",
    "file_EMR = 'EEM'\n",
    "div_EMR = 'EEMDividend'\n",
    "file_JST = 'EWJ'\n",
    "div_JST = 'EWJDividend'\n",
    "\n",
    "# data_files = [file_name_SP, file_name_RE, file_name_BND, file_name_EU, file_name_JPY, file_name_GOLD, file_name_RUT]\n",
    "# aliases = [\"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\", 'rut']\n",
    "\n",
    "# # input correlaries\n",
    "# cor_assets = [\"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\", 'rut', \"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\", 'rut', \"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\", 'rut', \"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\", 'rut']\n",
    "# cor_days_out = [20, 20, 20, 20, 20, 20, 20, 10, 10, 10, 10, 10, 10, 10, 252, 252, 252, 252, 252, 252, 252, 60, 60, 60, 60, 60, 60, 60]\n",
    "# pred_distance = 10\n",
    "# assets = [\"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\", 'rut']\n",
    "\n",
    "\n",
    "data_files = [file_SP, file_RE, file_BND, file_EU, file_JP, file_GLD, file_MID, file_SML, file_RUT, file_EST, file_EMR, file_JST]\n",
    "div_files = [div_SP, div_RE, div_BND, div_EU, div_JP, div_GLD, div_MID, div_SML, div_RUT, div_EST, div_EMR, div_JST]\n",
    "aliases = [\"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\", \"mid\", \"sml\", \"rut\", \"est\", \"emr\", \"jst\"]\n",
    "\n",
    "# input correlaries\n",
    "# cor_assets = ['sp', \"re\", \"bnd\", \"eu\", \"jp\", \"gld\", \"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\", \"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\",  \"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\"]\n",
    "# cor_days_out = [20,   20,    20,   20,   20,    20,   10,   10,   10, 10,   10,   10,   252,  252, 252, 252,  252,   252,    60,   60,    60,    60,    60,   60]\n",
    "\n",
    "days_out_list = [1, 5, 10, 20, 60, 120, 252]\n",
    "\n",
    "cor_assets = []\n",
    "cor_days_out = []\n",
    "\n",
    "for a in aliases:\n",
    "    for d in days_out_list:\n",
    "        cor_assets.append(a)\n",
    "        cor_days_out.append(d)\n",
    "\n",
    "# cor_assets = [\"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\", \"mid\", \"sml\", \"rut\", \"est\", \"emr\", \"jst\"]\n",
    "# cor_days_out = [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]\n",
    "pred_distance = 10\n",
    "assets = [\"sp\", \"re\", \"bnd\", \"eu\", \"jp\", \"gld\", \"mid\", \"sml\", \"rut\", \"est\", \"emr\", \"jst\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3920ba1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = load_data(path, data_files, aliases)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1e92f941",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.iloc[1:2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1162178c-2a28-4ad3-a0f1-2eb5f5a107ea",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.query(baseline_asset + \".notnull()\")\n",
    "df.reset_index(drop = True, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "06653bbf",
   "metadata": {},
   "outputs": [],
   "source": [
    "# add_correlaries(cor_assets, cor_days_out, pred_distance, df, assets)\n",
    "div_data = load_div_data(aliases, div_files)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9bfa994e-5cbd-4e5e-bbf0-d60e48ef2d75",
   "metadata": {},
   "outputs": [],
   "source": [
    "add_correlaries_div(cor_assets, cor_days_out, pred_distance, df, assets, div_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fab83581",
   "metadata": {},
   "outputs": [],
   "source": [
    "add_pred_differences(pred_distance, baseline_asset, assets, df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b33d0016-a5f2-4a81-8de3-e5e67d68a472",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e9c45b92-120c-47ca-bb42-c6c39c339643",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv('AllData.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ef663c3a-bae0-45e5-8ce5-44d97879425f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3edba2a6-c178-45f8-b267-f002e284dad1",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('AllData.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "33eb06eb-60b0-464d-97e1-aa604f54c070",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>est</th>\n",
       "      <th>emr</th>\n",
       "      <th>bnd</th>\n",
       "      <th>sp_1_dys</th>\n",
       "      <th>sp_5_dys</th>\n",
       "      <th>sp_10_dys</th>\n",
       "      <th>sp_20_dys</th>\n",
       "      <th>sp_60_dys</th>\n",
       "      <th>sp_120_dys</th>\n",
       "      <th>sp_252_dys</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3000</th>\n",
       "      <td>36.369999</td>\n",
       "      <td>22.064444</td>\n",
       "      <td>102.430000</td>\n",
       "      <td>-0.002070</td>\n",
       "      <td>0.009042</td>\n",
       "      <td>0.009972</td>\n",
       "      <td>0.018335</td>\n",
       "      <td>0.078382</td>\n",
       "      <td>0.073962</td>\n",
       "      <td>0.099434</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3001</th>\n",
       "      <td>36.445000</td>\n",
       "      <td>22.178888</td>\n",
       "      <td>102.379997</td>\n",
       "      <td>0.005476</td>\n",
       "      <td>0.014313</td>\n",
       "      <td>0.006729</td>\n",
       "      <td>0.028605</td>\n",
       "      <td>0.066256</td>\n",
       "      <td>0.087401</td>\n",
       "      <td>0.104649</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3002</th>\n",
       "      <td>36.345001</td>\n",
       "      <td>22.301111</td>\n",
       "      <td>102.360001</td>\n",
       "      <td>0.001485</td>\n",
       "      <td>0.008057</td>\n",
       "      <td>0.004719</td>\n",
       "      <td>0.029434</td>\n",
       "      <td>0.066058</td>\n",
       "      <td>0.086190</td>\n",
       "      <td>0.091760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3003</th>\n",
       "      <td>36.419998</td>\n",
       "      <td>22.244444</td>\n",
       "      <td>102.570000</td>\n",
       "      <td>-0.001895</td>\n",
       "      <td>0.003729</td>\n",
       "      <td>0.002068</td>\n",
       "      <td>0.015936</td>\n",
       "      <td>0.063477</td>\n",
       "      <td>0.083646</td>\n",
       "      <td>0.089494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3004</th>\n",
       "      <td>36.299999</td>\n",
       "      <td>22.427778</td>\n",
       "      <td>102.400002</td>\n",
       "      <td>-0.002146</td>\n",
       "      <td>0.000828</td>\n",
       "      <td>0.000497</td>\n",
       "      <td>0.012905</td>\n",
       "      <td>0.053976</td>\n",
       "      <td>0.080547</td>\n",
       "      <td>0.086179</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3005</th>\n",
       "      <td>36.145000</td>\n",
       "      <td>22.194445</td>\n",
       "      <td>102.400002</td>\n",
       "      <td>-0.004716</td>\n",
       "      <td>-0.001825</td>\n",
       "      <td>0.007200</td>\n",
       "      <td>0.008805</td>\n",
       "      <td>0.060379</td>\n",
       "      <td>0.078730</td>\n",
       "      <td>0.081543</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3006</th>\n",
       "      <td>35.595001</td>\n",
       "      <td>21.511110</td>\n",
       "      <td>102.300003</td>\n",
       "      <td>-0.012219</td>\n",
       "      <td>-0.019393</td>\n",
       "      <td>-0.005357</td>\n",
       "      <td>-0.003188</td>\n",
       "      <td>0.056173</td>\n",
       "      <td>0.072473</td>\n",
       "      <td>0.056830</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3007</th>\n",
       "      <td>35.375000</td>\n",
       "      <td>21.247778</td>\n",
       "      <td>102.260002</td>\n",
       "      <td>-0.006901</td>\n",
       "      <td>-0.027604</td>\n",
       "      <td>-0.019769</td>\n",
       "      <td>-0.000762</td>\n",
       "      <td>0.044614</td>\n",
       "      <td>0.065938</td>\n",
       "      <td>0.048512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3008</th>\n",
       "      <td>35.474998</td>\n",
       "      <td>21.233334</td>\n",
       "      <td>102.330002</td>\n",
       "      <td>0.005084</td>\n",
       "      <td>-0.020804</td>\n",
       "      <td>-0.017153</td>\n",
       "      <td>-0.001515</td>\n",
       "      <td>0.054030</td>\n",
       "      <td>0.075925</td>\n",
       "      <td>0.050297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3009</th>\n",
       "      <td>35.080002</td>\n",
       "      <td>21.274445</td>\n",
       "      <td>102.300003</td>\n",
       "      <td>-0.001433</td>\n",
       "      <td>-0.020104</td>\n",
       "      <td>-0.019293</td>\n",
       "      <td>-0.006459</td>\n",
       "      <td>0.061861</td>\n",
       "      <td>0.060910</td>\n",
       "      <td>0.044629</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3010</th>\n",
       "      <td>35.220001</td>\n",
       "      <td>21.301111</td>\n",
       "      <td>102.250000</td>\n",
       "      <td>0.004728</td>\n",
       "      <td>-0.010806</td>\n",
       "      <td>-0.012612</td>\n",
       "      <td>-0.002765</td>\n",
       "      <td>0.075560</td>\n",
       "      <td>0.085965</td>\n",
       "      <td>0.058813</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3011</th>\n",
       "      <td>34.959999</td>\n",
       "      <td>21.261110</td>\n",
       "      <td>102.389999</td>\n",
       "      <td>-0.006891</td>\n",
       "      <td>-0.005470</td>\n",
       "      <td>-0.024757</td>\n",
       "      <td>-0.018194</td>\n",
       "      <td>0.062197</td>\n",
       "      <td>0.075537</td>\n",
       "      <td>0.043809</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3012</th>\n",
       "      <td>35.470001</td>\n",
       "      <td>21.522223</td>\n",
       "      <td>102.540001</td>\n",
       "      <td>0.003300</td>\n",
       "      <td>0.004745</td>\n",
       "      <td>-0.022989</td>\n",
       "      <td>-0.018379</td>\n",
       "      <td>0.061694</td>\n",
       "      <td>0.088198</td>\n",
       "      <td>0.053394</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3013</th>\n",
       "      <td>35.099998</td>\n",
       "      <td>21.433332</td>\n",
       "      <td>102.790001</td>\n",
       "      <td>-0.008012</td>\n",
       "      <td>-0.008347</td>\n",
       "      <td>-0.028977</td>\n",
       "      <td>-0.026969</td>\n",
       "      <td>0.062128</td>\n",
       "      <td>0.081563</td>\n",
       "      <td>0.036300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3014</th>\n",
       "      <td>35.150002</td>\n",
       "      <td>21.816668</td>\n",
       "      <td>102.419998</td>\n",
       "      <td>0.005271</td>\n",
       "      <td>-0.001689</td>\n",
       "      <td>-0.021759</td>\n",
       "      <td>-0.021273</td>\n",
       "      <td>0.069852</td>\n",
       "      <td>0.077161</td>\n",
       "      <td>0.039198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3015</th>\n",
       "      <td>35.275002</td>\n",
       "      <td>21.777779</td>\n",
       "      <td>102.690002</td>\n",
       "      <td>0.010403</td>\n",
       "      <td>0.003950</td>\n",
       "      <td>-0.006899</td>\n",
       "      <td>0.000251</td>\n",
       "      <td>0.073984</td>\n",
       "      <td>0.085104</td>\n",
       "      <td>0.045872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3016</th>\n",
       "      <td>34.755001</td>\n",
       "      <td>21.477777</td>\n",
       "      <td>102.839996</td>\n",
       "      <td>-0.010463</td>\n",
       "      <td>0.000338</td>\n",
       "      <td>-0.005133</td>\n",
       "      <td>-0.010463</td>\n",
       "      <td>0.074825</td>\n",
       "      <td>0.069187</td>\n",
       "      <td>0.035201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3017</th>\n",
       "      <td>34.619999</td>\n",
       "      <td>21.211111</td>\n",
       "      <td>102.980003</td>\n",
       "      <td>-0.006090</td>\n",
       "      <td>-0.009024</td>\n",
       "      <td>-0.004322</td>\n",
       "      <td>-0.024005</td>\n",
       "      <td>0.069543</td>\n",
       "      <td>0.060087</td>\n",
       "      <td>0.020851</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3018</th>\n",
       "      <td>34.724998</td>\n",
       "      <td>21.500000</td>\n",
       "      <td>103.029999</td>\n",
       "      <td>-0.006128</td>\n",
       "      <td>-0.007142</td>\n",
       "      <td>-0.015429</td>\n",
       "      <td>-0.032317</td>\n",
       "      <td>0.046979</td>\n",
       "      <td>0.051409</td>\n",
       "      <td>0.017247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3019</th>\n",
       "      <td>34.895000</td>\n",
       "      <td>21.466667</td>\n",
       "      <td>103.050003</td>\n",
       "      <td>-0.001969</td>\n",
       "      <td>-0.014293</td>\n",
       "      <td>-0.015957</td>\n",
       "      <td>-0.034942</td>\n",
       "      <td>0.032512</td>\n",
       "      <td>0.057527</td>\n",
       "      <td>0.018527</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3020</th>\n",
       "      <td>34.924999</td>\n",
       "      <td>21.661112</td>\n",
       "      <td>102.870003</td>\n",
       "      <td>0.002831</td>\n",
       "      <td>-0.021679</td>\n",
       "      <td>-0.017815</td>\n",
       "      <td>-0.030202</td>\n",
       "      <td>0.032326</td>\n",
       "      <td>0.060617</td>\n",
       "      <td>0.008717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3021</th>\n",
       "      <td>35.294998</td>\n",
       "      <td>21.977777</td>\n",
       "      <td>102.820000</td>\n",
       "      <td>0.002995</td>\n",
       "      <td>-0.008374</td>\n",
       "      <td>-0.008039</td>\n",
       "      <td>-0.032596</td>\n",
       "      <td>0.035601</td>\n",
       "      <td>0.081458</td>\n",
       "      <td>0.022236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3022</th>\n",
       "      <td>35.369999</td>\n",
       "      <td>21.998890</td>\n",
       "      <td>102.680000</td>\n",
       "      <td>0.001706</td>\n",
       "      <td>-0.000596</td>\n",
       "      <td>-0.009615</td>\n",
       "      <td>-0.032383</td>\n",
       "      <td>0.034534</td>\n",
       "      <td>0.099017</td>\n",
       "      <td>0.035812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3023</th>\n",
       "      <td>35.320000</td>\n",
       "      <td>22.018888</td>\n",
       "      <td>103.029999</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.005566</td>\n",
       "      <td>-0.001615</td>\n",
       "      <td>-0.030546</td>\n",
       "      <td>0.034170</td>\n",
       "      <td>0.097477</td>\n",
       "      <td>0.034808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3024</th>\n",
       "      <td>35.500000</td>\n",
       "      <td>22.308889</td>\n",
       "      <td>102.900002</td>\n",
       "      <td>0.006217</td>\n",
       "      <td>0.013814</td>\n",
       "      <td>-0.000677</td>\n",
       "      <td>-0.022421</td>\n",
       "      <td>0.027657</td>\n",
       "      <td>0.090238</td>\n",
       "      <td>0.041241</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3025</th>\n",
       "      <td>35.875000</td>\n",
       "      <td>22.500000</td>\n",
       "      <td>102.699997</td>\n",
       "      <td>0.006347</td>\n",
       "      <td>0.017368</td>\n",
       "      <td>-0.004687</td>\n",
       "      <td>-0.011554</td>\n",
       "      <td>0.020249</td>\n",
       "      <td>0.099390</td>\n",
       "      <td>0.043345</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3026</th>\n",
       "      <td>35.945000</td>\n",
       "      <td>22.571112</td>\n",
       "      <td>102.779999</td>\n",
       "      <td>0.003027</td>\n",
       "      <td>0.017402</td>\n",
       "      <td>0.008882</td>\n",
       "      <td>0.003703</td>\n",
       "      <td>0.016968</td>\n",
       "      <td>0.114881</td>\n",
       "      <td>0.048251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3027</th>\n",
       "      <td>35.605000</td>\n",
       "      <td>22.547777</td>\n",
       "      <td>102.650002</td>\n",
       "      <td>-0.002599</td>\n",
       "      <td>0.013029</td>\n",
       "      <td>0.012426</td>\n",
       "      <td>0.008050</td>\n",
       "      <td>0.015797</td>\n",
       "      <td>0.109805</td>\n",
       "      <td>0.054143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3028</th>\n",
       "      <td>35.855000</td>\n",
       "      <td>22.900000</td>\n",
       "      <td>103.080002</td>\n",
       "      <td>0.010676</td>\n",
       "      <td>0.023844</td>\n",
       "      <td>0.029543</td>\n",
       "      <td>0.013658</td>\n",
       "      <td>0.028662</td>\n",
       "      <td>0.110157</td>\n",
       "      <td>0.062290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3029</th>\n",
       "      <td>35.595001</td>\n",
       "      <td>22.972221</td>\n",
       "      <td>103.099998</td>\n",
       "      <td>-0.001331</td>\n",
       "      <td>0.016164</td>\n",
       "      <td>0.030202</td>\n",
       "      <td>0.013762</td>\n",
       "      <td>0.026503</td>\n",
       "      <td>0.102470</td>\n",
       "      <td>0.049104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3030</th>\n",
       "      <td>35.615002</td>\n",
       "      <td>23.016666</td>\n",
       "      <td>103.160004</td>\n",
       "      <td>0.001166</td>\n",
       "      <td>0.010933</td>\n",
       "      <td>0.028491</td>\n",
       "      <td>0.010168</td>\n",
       "      <td>0.019939</td>\n",
       "      <td>0.092520</td>\n",
       "      <td>0.050052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3031</th>\n",
       "      <td>35.549999</td>\n",
       "      <td>22.942223</td>\n",
       "      <td>103.440002</td>\n",
       "      <td>-0.007487</td>\n",
       "      <td>0.000335</td>\n",
       "      <td>0.017743</td>\n",
       "      <td>0.009562</td>\n",
       "      <td>0.004377</td>\n",
       "      <td>0.087503</td>\n",
       "      <td>0.038833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3032</th>\n",
       "      <td>35.875000</td>\n",
       "      <td>23.053333</td>\n",
       "      <td>102.910004</td>\n",
       "      <td>0.003604</td>\n",
       "      <td>0.006557</td>\n",
       "      <td>0.019671</td>\n",
       "      <td>0.009868</td>\n",
       "      <td>0.008507</td>\n",
       "      <td>0.083816</td>\n",
       "      <td>0.031619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3033</th>\n",
       "      <td>36.200001</td>\n",
       "      <td>23.277779</td>\n",
       "      <td>103.050003</td>\n",
       "      <td>0.008602</td>\n",
       "      <td>0.004491</td>\n",
       "      <td>0.028442</td>\n",
       "      <td>0.026781</td>\n",
       "      <td>0.024516</td>\n",
       "      <td>0.095917</td>\n",
       "      <td>0.044271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3034</th>\n",
       "      <td>36.439999</td>\n",
       "      <td>23.444445</td>\n",
       "      <td>103.070000</td>\n",
       "      <td>-0.000745</td>\n",
       "      <td>0.005080</td>\n",
       "      <td>0.021327</td>\n",
       "      <td>0.020636</td>\n",
       "      <td>0.017710</td>\n",
       "      <td>0.093611</td>\n",
       "      <td>0.048206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3035</th>\n",
       "      <td>36.650002</td>\n",
       "      <td>23.500000</td>\n",
       "      <td>102.870003</td>\n",
       "      <td>0.003729</td>\n",
       "      <td>0.007653</td>\n",
       "      <td>0.018670</td>\n",
       "      <td>0.013895</td>\n",
       "      <td>0.020128</td>\n",
       "      <td>0.090279</td>\n",
       "      <td>0.042696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3036</th>\n",
       "      <td>36.599998</td>\n",
       "      <td>23.427778</td>\n",
       "      <td>102.750000</td>\n",
       "      <td>0.000660</td>\n",
       "      <td>0.015925</td>\n",
       "      <td>0.016266</td>\n",
       "      <td>0.025292</td>\n",
       "      <td>0.032277</td>\n",
       "      <td>0.090999</td>\n",
       "      <td>0.047985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3037</th>\n",
       "      <td>36.750000</td>\n",
       "      <td>23.388889</td>\n",
       "      <td>102.699997</td>\n",
       "      <td>-0.008085</td>\n",
       "      <td>0.004092</td>\n",
       "      <td>0.010676</td>\n",
       "      <td>0.023234</td>\n",
       "      <td>0.019071</td>\n",
       "      <td>0.078780</td>\n",
       "      <td>0.043391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3038</th>\n",
       "      <td>36.799999</td>\n",
       "      <td>23.676666</td>\n",
       "      <td>102.730003</td>\n",
       "      <td>0.001331</td>\n",
       "      <td>-0.003146</td>\n",
       "      <td>0.001331</td>\n",
       "      <td>0.030913</td>\n",
       "      <td>0.018873</td>\n",
       "      <td>0.089207</td>\n",
       "      <td>0.047963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3039</th>\n",
       "      <td>36.615002</td>\n",
       "      <td>23.590000</td>\n",
       "      <td>102.440002</td>\n",
       "      <td>-0.014868</td>\n",
       "      <td>-0.017236</td>\n",
       "      <td>-0.012243</td>\n",
       "      <td>0.017589</td>\n",
       "      <td>0.001351</td>\n",
       "      <td>0.067411</td>\n",
       "      <td>0.034994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3040</th>\n",
       "      <td>36.700001</td>\n",
       "      <td>23.698889</td>\n",
       "      <td>102.489998</td>\n",
       "      <td>0.007167</td>\n",
       "      <td>-0.013869</td>\n",
       "      <td>-0.006322</td>\n",
       "      <td>0.021988</td>\n",
       "      <td>0.009294</td>\n",
       "      <td>0.073033</td>\n",
       "      <td>0.044235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3041</th>\n",
       "      <td>36.849998</td>\n",
       "      <td>24.066668</td>\n",
       "      <td>102.389999</td>\n",
       "      <td>0.006614</td>\n",
       "      <td>-0.008003</td>\n",
       "      <td>0.007795</td>\n",
       "      <td>0.025676</td>\n",
       "      <td>0.020626</td>\n",
       "      <td>0.068040</td>\n",
       "      <td>0.046748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3042</th>\n",
       "      <td>37.299999</td>\n",
       "      <td>24.510000</td>\n",
       "      <td>102.480003</td>\n",
       "      <td>0.009897</td>\n",
       "      <td>0.009981</td>\n",
       "      <td>0.014114</td>\n",
       "      <td>0.034063</td>\n",
       "      <td>0.030028</td>\n",
       "      <td>0.083036</td>\n",
       "      <td>0.056464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3043</th>\n",
       "      <td>37.044998</td>\n",
       "      <td>24.468889</td>\n",
       "      <td>102.209999</td>\n",
       "      <td>-0.006588</td>\n",
       "      <td>0.001994</td>\n",
       "      <td>-0.001159</td>\n",
       "      <td>0.027250</td>\n",
       "      <td>0.011742</td>\n",
       "      <td>0.068846</td>\n",
       "      <td>0.048774</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3044</th>\n",
       "      <td>37.195000</td>\n",
       "      <td>24.537779</td>\n",
       "      <td>101.849998</td>\n",
       "      <td>0.004974</td>\n",
       "      <td>0.022175</td>\n",
       "      <td>0.004558</td>\n",
       "      <td>0.025982</td>\n",
       "      <td>0.015922</td>\n",
       "      <td>0.076834</td>\n",
       "      <td>0.043647</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3045</th>\n",
       "      <td>36.730000</td>\n",
       "      <td>24.133333</td>\n",
       "      <td>101.720001</td>\n",
       "      <td>-0.000495</td>\n",
       "      <td>0.014399</td>\n",
       "      <td>0.000330</td>\n",
       "      <td>0.019006</td>\n",
       "      <td>0.016101</td>\n",
       "      <td>0.077258</td>\n",
       "      <td>0.049273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3046</th>\n",
       "      <td>36.910000</td>\n",
       "      <td>24.200001</td>\n",
       "      <td>101.800003</td>\n",
       "      <td>0.000413</td>\n",
       "      <td>0.008150</td>\n",
       "      <td>0.000083</td>\n",
       "      <td>0.016349</td>\n",
       "      <td>0.016861</td>\n",
       "      <td>0.072174</td>\n",
       "      <td>0.047800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3047</th>\n",
       "      <td>37.575001</td>\n",
       "      <td>24.488890</td>\n",
       "      <td>102.089996</td>\n",
       "      <td>0.012457</td>\n",
       "      <td>0.010706</td>\n",
       "      <td>0.020793</td>\n",
       "      <td>0.031691</td>\n",
       "      <td>0.039204</td>\n",
       "      <td>0.081989</td>\n",
       "      <td>0.058109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3048</th>\n",
       "      <td>37.525002</td>\n",
       "      <td>24.650000</td>\n",
       "      <td>102.120003</td>\n",
       "      <td>0.000489</td>\n",
       "      <td>0.017906</td>\n",
       "      <td>0.019935</td>\n",
       "      <td>0.021293</td>\n",
       "      <td>0.033673</td>\n",
       "      <td>0.080327</td>\n",
       "      <td>0.055078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3049</th>\n",
       "      <td>37.695000</td>\n",
       "      <td>24.462221</td>\n",
       "      <td>101.900002</td>\n",
       "      <td>-0.003746</td>\n",
       "      <td>0.009074</td>\n",
       "      <td>0.031450</td>\n",
       "      <td>0.018822</td>\n",
       "      <td>0.026172</td>\n",
       "      <td>0.084486</td>\n",
       "      <td>0.064109</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            est        emr         bnd  sp_1_dys  sp_5_dys  sp_10_dys  \\\n",
       "3000  36.369999  22.064444  102.430000 -0.002070  0.009042   0.009972   \n",
       "3001  36.445000  22.178888  102.379997  0.005476  0.014313   0.006729   \n",
       "3002  36.345001  22.301111  102.360001  0.001485  0.008057   0.004719   \n",
       "3003  36.419998  22.244444  102.570000 -0.001895  0.003729   0.002068   \n",
       "3004  36.299999  22.427778  102.400002 -0.002146  0.000828   0.000497   \n",
       "3005  36.145000  22.194445  102.400002 -0.004716 -0.001825   0.007200   \n",
       "3006  35.595001  21.511110  102.300003 -0.012219 -0.019393  -0.005357   \n",
       "3007  35.375000  21.247778  102.260002 -0.006901 -0.027604  -0.019769   \n",
       "3008  35.474998  21.233334  102.330002  0.005084 -0.020804  -0.017153   \n",
       "3009  35.080002  21.274445  102.300003 -0.001433 -0.020104  -0.019293   \n",
       "3010  35.220001  21.301111  102.250000  0.004728 -0.010806  -0.012612   \n",
       "3011  34.959999  21.261110  102.389999 -0.006891 -0.005470  -0.024757   \n",
       "3012  35.470001  21.522223  102.540001  0.003300  0.004745  -0.022989   \n",
       "3013  35.099998  21.433332  102.790001 -0.008012 -0.008347  -0.028977   \n",
       "3014  35.150002  21.816668  102.419998  0.005271 -0.001689  -0.021759   \n",
       "3015  35.275002  21.777779  102.690002  0.010403  0.003950  -0.006899   \n",
       "3016  34.755001  21.477777  102.839996 -0.010463  0.000338  -0.005133   \n",
       "3017  34.619999  21.211111  102.980003 -0.006090 -0.009024  -0.004322   \n",
       "3018  34.724998  21.500000  103.029999 -0.006128 -0.007142  -0.015429   \n",
       "3019  34.895000  21.466667  103.050003 -0.001969 -0.014293  -0.015957   \n",
       "3020  34.924999  21.661112  102.870003  0.002831 -0.021679  -0.017815   \n",
       "3021  35.294998  21.977777  102.820000  0.002995 -0.008374  -0.008039   \n",
       "3022  35.369999  21.998890  102.680000  0.001706 -0.000596  -0.009615   \n",
       "3023  35.320000  22.018888  103.029999  0.000000  0.005566  -0.001615   \n",
       "3024  35.500000  22.308889  102.900002  0.006217  0.013814  -0.000677   \n",
       "3025  35.875000  22.500000  102.699997  0.006347  0.017368  -0.004687   \n",
       "3026  35.945000  22.571112  102.779999  0.003027  0.017402   0.008882   \n",
       "3027  35.605000  22.547777  102.650002 -0.002599  0.013029   0.012426   \n",
       "3028  35.855000  22.900000  103.080002  0.010676  0.023844   0.029543   \n",
       "3029  35.595001  22.972221  103.099998 -0.001331  0.016164   0.030202   \n",
       "3030  35.615002  23.016666  103.160004  0.001166  0.010933   0.028491   \n",
       "3031  35.549999  22.942223  103.440002 -0.007487  0.000335   0.017743   \n",
       "3032  35.875000  23.053333  102.910004  0.003604  0.006557   0.019671   \n",
       "3033  36.200001  23.277779  103.050003  0.008602  0.004491   0.028442   \n",
       "3034  36.439999  23.444445  103.070000 -0.000745  0.005080   0.021327   \n",
       "3035  36.650002  23.500000  102.870003  0.003729  0.007653   0.018670   \n",
       "3036  36.599998  23.427778  102.750000  0.000660  0.015925   0.016266   \n",
       "3037  36.750000  23.388889  102.699997 -0.008085  0.004092   0.010676   \n",
       "3038  36.799999  23.676666  102.730003  0.001331 -0.003146   0.001331   \n",
       "3039  36.615002  23.590000  102.440002 -0.014868 -0.017236  -0.012243   \n",
       "3040  36.700001  23.698889  102.489998  0.007167 -0.013869  -0.006322   \n",
       "3041  36.849998  24.066668  102.389999  0.006614 -0.008003   0.007795   \n",
       "3042  37.299999  24.510000  102.480003  0.009897  0.009981   0.014114   \n",
       "3043  37.044998  24.468889  102.209999 -0.006588  0.001994  -0.001159   \n",
       "3044  37.195000  24.537779  101.849998  0.004974  0.022175   0.004558   \n",
       "3045  36.730000  24.133333  101.720001 -0.000495  0.014399   0.000330   \n",
       "3046  36.910000  24.200001  101.800003  0.000413  0.008150   0.000083   \n",
       "3047  37.575001  24.488890  102.089996  0.012457  0.010706   0.020793   \n",
       "3048  37.525002  24.650000  102.120003  0.000489  0.017906   0.019935   \n",
       "3049  37.695000  24.462221  101.900002 -0.003746  0.009074   0.031450   \n",
       "\n",
       "      sp_20_dys  sp_60_dys  sp_120_dys  sp_252_dys  \n",
       "3000   0.018335   0.078382    0.073962    0.099434  \n",
       "3001   0.028605   0.066256    0.087401    0.104649  \n",
       "3002   0.029434   0.066058    0.086190    0.091760  \n",
       "3003   0.015936   0.063477    0.083646    0.089494  \n",
       "3004   0.012905   0.053976    0.080547    0.086179  \n",
       "3005   0.008805   0.060379    0.078730    0.081543  \n",
       "3006  -0.003188   0.056173    0.072473    0.056830  \n",
       "3007  -0.000762   0.044614    0.065938    0.048512  \n",
       "3008  -0.001515   0.054030    0.075925    0.050297  \n",
       "3009  -0.006459   0.061861    0.060910    0.044629  \n",
       "3010  -0.002765   0.075560    0.085965    0.058813  \n",
       "3011  -0.018194   0.062197    0.075537    0.043809  \n",
       "3012  -0.018379   0.061694    0.088198    0.053394  \n",
       "3013  -0.026969   0.062128    0.081563    0.036300  \n",
       "3014  -0.021273   0.069852    0.077161    0.039198  \n",
       "3015   0.000251   0.073984    0.085104    0.045872  \n",
       "3016  -0.010463   0.074825    0.069187    0.035201  \n",
       "3017  -0.024005   0.069543    0.060087    0.020851  \n",
       "3018  -0.032317   0.046979    0.051409    0.017247  \n",
       "3019  -0.034942   0.032512    0.057527    0.018527  \n",
       "3020  -0.030202   0.032326    0.060617    0.008717  \n",
       "3021  -0.032596   0.035601    0.081458    0.022236  \n",
       "3022  -0.032383   0.034534    0.099017    0.035812  \n",
       "3023  -0.030546   0.034170    0.097477    0.034808  \n",
       "3024  -0.022421   0.027657    0.090238    0.041241  \n",
       "3025  -0.011554   0.020249    0.099390    0.043345  \n",
       "3026   0.003703   0.016968    0.114881    0.048251  \n",
       "3027   0.008050   0.015797    0.109805    0.054143  \n",
       "3028   0.013658   0.028662    0.110157    0.062290  \n",
       "3029   0.013762   0.026503    0.102470    0.049104  \n",
       "3030   0.010168   0.019939    0.092520    0.050052  \n",
       "3031   0.009562   0.004377    0.087503    0.038833  \n",
       "3032   0.009868   0.008507    0.083816    0.031619  \n",
       "3033   0.026781   0.024516    0.095917    0.044271  \n",
       "3034   0.020636   0.017710    0.093611    0.048206  \n",
       "3035   0.013895   0.020128    0.090279    0.042696  \n",
       "3036   0.025292   0.032277    0.090999    0.047985  \n",
       "3037   0.023234   0.019071    0.078780    0.043391  \n",
       "3038   0.030913   0.018873    0.089207    0.047963  \n",
       "3039   0.017589   0.001351    0.067411    0.034994  \n",
       "3040   0.021988   0.009294    0.073033    0.044235  \n",
       "3041   0.025676   0.020626    0.068040    0.046748  \n",
       "3042   0.034063   0.030028    0.083036    0.056464  \n",
       "3043   0.027250   0.011742    0.068846    0.048774  \n",
       "3044   0.025982   0.015922    0.076834    0.043647  \n",
       "3045   0.019006   0.016101    0.077258    0.049273  \n",
       "3046   0.016349   0.016861    0.072174    0.047800  \n",
       "3047   0.031691   0.039204    0.081989    0.058109  \n",
       "3048   0.021293   0.033673    0.080327    0.055078  \n",
       "3049   0.018822   0.026172    0.084486    0.064109  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[3000: 3050, 10 :20]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "fb314bac-7252-40ae-af70-ecdbcef4a3df",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>sp</th>\n",
       "      <th>gld</th>\n",
       "      <th>jst</th>\n",
       "      <th>eu</th>\n",
       "      <th>jp</th>\n",
       "      <th>mid</th>\n",
       "      <th>sml</th>\n",
       "      <th>re_1_dys</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [Date, sp, gld, jst, eu, jp, mid, sml, re_1_dys]\n",
       "Index: []"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[8060: 8061, [0, 1, 2, 3, 4, 5, 6, 7, 20]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "a5cbfcce-90f4-4267-9063-55543c4daacc",
   "metadata": {},
   "outputs": [],
   "source": [
    "columns_to_use = []\n",
    "dont_use = [ \"rut_1_dys\", \"est_1_dys\",  \"est_5_dys\", \"est_20_dys\"]\n",
    "# \"sp_252_dys\",\n",
    "aliases_not_use = ['mid', 'sml', 'jst', 'est', 'emr', 'rut']\n",
    "# rut\n",
    "time_not_use = [1, 5, 120]\n",
    "for col in df.columns:\n",
    "    if col not in dont_use:\n",
    "        use = True\n",
    "        for a in aliases_not_use:\n",
    "            if a in col:\n",
    "                use = False\n",
    "        for t in time_not_use:\n",
    "            if \"_\" + str(t) + \"_\" in col:\n",
    "                use = False\n",
    "        if use:\n",
    "            columns_to_use.append(col)\n",
    "            \n",
    "aliases_to_use = []\n",
    "for a in aliases:\n",
    "    if not a in aliases_not_use:\n",
    "        aliases_to_use.append(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "45b3fc03-cda9-4a1e-b355-9559dbdcd670",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_test = df[(df['Date'] >= '2018-01-01') & (df['Date'] <= '2018-12-31')][columns_to_use]\n",
    "df_test = df_test.reset_index(drop=True)\n",
    "df_train = df[(df['Date'] < '2018-01-01')][columns_to_use]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "5eac076e-264e-4285-a201-eafb2f8648fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>sp</th>\n",
       "      <th>gld</th>\n",
       "      <th>eu</th>\n",
       "      <th>jp</th>\n",
       "      <th>re</th>\n",
       "      <th>bnd</th>\n",
       "      <th>sp_10_dys</th>\n",
       "      <th>sp_20_dys</th>\n",
       "      <th>sp_60_dys</th>\n",
       "      <th>...</th>\n",
       "      <th>re_fut_10dys</th>\n",
       "      <th>bnd_fut_10dys</th>\n",
       "      <th>eu_fut_10dys</th>\n",
       "      <th>jp_fut_10dys</th>\n",
       "      <th>gld_fut_10dys</th>\n",
       "      <th>re_sp_10dys_diff</th>\n",
       "      <th>bnd_sp_10dys_diff</th>\n",
       "      <th>eu_sp_10dys_diff</th>\n",
       "      <th>jp_sp_10dys_diff</th>\n",
       "      <th>gld_sp_10dys_diff</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2018-01-02</td>\n",
       "      <td>268.769989</td>\n",
       "      <td>1316.1</td>\n",
       "      <td>0.8293</td>\n",
       "      <td>112.30</td>\n",
       "      <td>80.599998</td>\n",
       "      <td>109.169998</td>\n",
       "      <td>0.008480</td>\n",
       "      <td>0.016297</td>\n",
       "      <td>0.055407</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.035732</td>\n",
       "      <td>-0.004763</td>\n",
       "      <td>-0.010491</td>\n",
       "      <td>-0.009083</td>\n",
       "      <td>0.017552</td>\n",
       "      <td>-0.076064</td>\n",
       "      <td>-0.045095</td>\n",
       "      <td>-0.050823</td>\n",
       "      <td>-0.049415</td>\n",
       "      <td>-0.022780</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2018-01-03</td>\n",
       "      <td>270.470001</td>\n",
       "      <td>1318.5</td>\n",
       "      <td>0.8323</td>\n",
       "      <td>112.50</td>\n",
       "      <td>80.470001</td>\n",
       "      <td>109.180000</td>\n",
       "      <td>0.008464</td>\n",
       "      <td>0.023965</td>\n",
       "      <td>0.063294</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.043619</td>\n",
       "      <td>-0.007053</td>\n",
       "      <td>-0.018263</td>\n",
       "      <td>-0.012356</td>\n",
       "      <td>0.006598</td>\n",
       "      <td>-0.075674</td>\n",
       "      <td>-0.039108</td>\n",
       "      <td>-0.050318</td>\n",
       "      <td>-0.044411</td>\n",
       "      <td>-0.025457</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2018-01-04</td>\n",
       "      <td>271.609985</td>\n",
       "      <td>1321.6</td>\n",
       "      <td>0.8286</td>\n",
       "      <td>112.75</td>\n",
       "      <td>79.209999</td>\n",
       "      <td>109.110001</td>\n",
       "      <td>0.016619</td>\n",
       "      <td>0.031992</td>\n",
       "      <td>0.069541</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.022093</td>\n",
       "      <td>-0.008524</td>\n",
       "      <td>-0.012551</td>\n",
       "      <td>-0.017472</td>\n",
       "      <td>0.008702</td>\n",
       "      <td>-0.054493</td>\n",
       "      <td>-0.040923</td>\n",
       "      <td>-0.044951</td>\n",
       "      <td>-0.049872</td>\n",
       "      <td>-0.023698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2018-01-05</td>\n",
       "      <td>273.420013</td>\n",
       "      <td>1322.3</td>\n",
       "      <td>0.8313</td>\n",
       "      <td>113.08</td>\n",
       "      <td>79.290001</td>\n",
       "      <td>109.040001</td>\n",
       "      <td>0.023930</td>\n",
       "      <td>0.038672</td>\n",
       "      <td>0.073836</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015134</td>\n",
       "      <td>-0.008254</td>\n",
       "      <td>-0.019006</td>\n",
       "      <td>-0.019102</td>\n",
       "      <td>0.007260</td>\n",
       "      <td>-0.049038</td>\n",
       "      <td>-0.042158</td>\n",
       "      <td>-0.052910</td>\n",
       "      <td>-0.053005</td>\n",
       "      <td>-0.026644</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2018-01-08</td>\n",
       "      <td>273.920013</td>\n",
       "      <td>1320.4</td>\n",
       "      <td>0.8357</td>\n",
       "      <td>113.09</td>\n",
       "      <td>79.739998</td>\n",
       "      <td>109.010002</td>\n",
       "      <td>0.023694</td>\n",
       "      <td>0.037301</td>\n",
       "      <td>0.074112</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.007148</td>\n",
       "      <td>-0.005596</td>\n",
       "      <td>-0.027043</td>\n",
       "      <td>-0.024582</td>\n",
       "      <td>0.012345</td>\n",
       "      <td>-0.041355</td>\n",
       "      <td>-0.039803</td>\n",
       "      <td>-0.061250</td>\n",
       "      <td>-0.058789</td>\n",
       "      <td>-0.021862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2018-01-09</td>\n",
       "      <td>274.540009</td>\n",
       "      <td>1313.7</td>\n",
       "      <td>0.8377</td>\n",
       "      <td>112.66</td>\n",
       "      <td>78.820000</td>\n",
       "      <td>108.709999</td>\n",
       "      <td>0.026279</td>\n",
       "      <td>0.034010</td>\n",
       "      <td>0.078150</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000888</td>\n",
       "      <td>-0.003863</td>\n",
       "      <td>-0.037842</td>\n",
       "      <td>-0.030534</td>\n",
       "      <td>0.032427</td>\n",
       "      <td>-0.030583</td>\n",
       "      <td>-0.035334</td>\n",
       "      <td>-0.069312</td>\n",
       "      <td>-0.062005</td>\n",
       "      <td>0.000957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2018-01-10</td>\n",
       "      <td>274.119995</td>\n",
       "      <td>1319.3</td>\n",
       "      <td>0.8370</td>\n",
       "      <td>111.44</td>\n",
       "      <td>77.860001</td>\n",
       "      <td>108.709999</td>\n",
       "      <td>0.025937</td>\n",
       "      <td>0.029327</td>\n",
       "      <td>0.075191</td>\n",
       "      <td>...</td>\n",
       "      <td>0.011302</td>\n",
       "      <td>-0.001288</td>\n",
       "      <td>-0.036201</td>\n",
       "      <td>-0.018216</td>\n",
       "      <td>0.033048</td>\n",
       "      <td>-0.022187</td>\n",
       "      <td>-0.034777</td>\n",
       "      <td>-0.069690</td>\n",
       "      <td>-0.051705</td>\n",
       "      <td>-0.000441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2018-01-11</td>\n",
       "      <td>276.119995</td>\n",
       "      <td>1322.5</td>\n",
       "      <td>0.8311</td>\n",
       "      <td>111.25</td>\n",
       "      <td>77.589996</td>\n",
       "      <td>108.760002</td>\n",
       "      <td>0.032919</td>\n",
       "      <td>0.035010</td>\n",
       "      <td>0.081593</td>\n",
       "      <td>...</td>\n",
       "      <td>0.015208</td>\n",
       "      <td>-0.003586</td>\n",
       "      <td>-0.031284</td>\n",
       "      <td>-0.022742</td>\n",
       "      <td>0.022382</td>\n",
       "      <td>-0.022674</td>\n",
       "      <td>-0.041468</td>\n",
       "      <td>-0.069166</td>\n",
       "      <td>-0.060624</td>\n",
       "      <td>-0.015500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2018-01-12</td>\n",
       "      <td>277.920013</td>\n",
       "      <td>1334.9</td>\n",
       "      <td>0.8206</td>\n",
       "      <td>111.04</td>\n",
       "      <td>76.959999</td>\n",
       "      <td>108.739998</td>\n",
       "      <td>0.037518</td>\n",
       "      <td>0.041874</td>\n",
       "      <td>0.087877</td>\n",
       "      <td>...</td>\n",
       "      <td>0.010395</td>\n",
       "      <td>-0.005150</td>\n",
       "      <td>-0.015842</td>\n",
       "      <td>-0.018822</td>\n",
       "      <td>0.004045</td>\n",
       "      <td>-0.013928</td>\n",
       "      <td>-0.029473</td>\n",
       "      <td>-0.040166</td>\n",
       "      <td>-0.043146</td>\n",
       "      <td>-0.020278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2018-01-16</td>\n",
       "      <td>276.970001</td>\n",
       "      <td>1339.3</td>\n",
       "      <td>0.8156</td>\n",
       "      <td>110.45</td>\n",
       "      <td>77.169998</td>\n",
       "      <td>108.769997</td>\n",
       "      <td>0.037885</td>\n",
       "      <td>0.042573</td>\n",
       "      <td>0.083099</td>\n",
       "      <td>...</td>\n",
       "      <td>0.002203</td>\n",
       "      <td>-0.006987</td>\n",
       "      <td>-0.011280</td>\n",
       "      <td>-0.015120</td>\n",
       "      <td>0.000523</td>\n",
       "      <td>-0.015091</td>\n",
       "      <td>-0.024281</td>\n",
       "      <td>-0.028574</td>\n",
       "      <td>-0.032414</td>\n",
       "      <td>-0.016772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2018-01-17</td>\n",
       "      <td>279.609985</td>\n",
       "      <td>1339.2</td>\n",
       "      <td>0.8206</td>\n",
       "      <td>111.28</td>\n",
       "      <td>77.720001</td>\n",
       "      <td>108.650002</td>\n",
       "      <td>0.040332</td>\n",
       "      <td>0.049154</td>\n",
       "      <td>0.093123</td>\n",
       "      <td>...</td>\n",
       "      <td>0.010808</td>\n",
       "      <td>-0.005062</td>\n",
       "      <td>-0.018889</td>\n",
       "      <td>-0.018781</td>\n",
       "      <td>0.002912</td>\n",
       "      <td>0.002618</td>\n",
       "      <td>-0.013252</td>\n",
       "      <td>-0.027079</td>\n",
       "      <td>-0.026971</td>\n",
       "      <td>-0.005278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2018-01-18</td>\n",
       "      <td>279.140015</td>\n",
       "      <td>1327.2</td>\n",
       "      <td>0.8171</td>\n",
       "      <td>111.11</td>\n",
       "      <td>76.959999</td>\n",
       "      <td>108.410004</td>\n",
       "      <td>0.032055</td>\n",
       "      <td>0.040790</td>\n",
       "      <td>0.085683</td>\n",
       "      <td>...</td>\n",
       "      <td>0.003768</td>\n",
       "      <td>-0.008210</td>\n",
       "      <td>-0.021662</td>\n",
       "      <td>-0.015300</td>\n",
       "      <td>0.015597</td>\n",
       "      <td>-0.004973</td>\n",
       "      <td>-0.016951</td>\n",
       "      <td>-0.030403</td>\n",
       "      <td>-0.024041</td>\n",
       "      <td>0.006856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2018-01-19</td>\n",
       "      <td>280.410004</td>\n",
       "      <td>1333.1</td>\n",
       "      <td>0.8182</td>\n",
       "      <td>110.78</td>\n",
       "      <td>77.459999</td>\n",
       "      <td>108.180000</td>\n",
       "      <td>0.032399</td>\n",
       "      <td>0.049556</td>\n",
       "      <td>0.094881</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.012910</td>\n",
       "      <td>-0.009059</td>\n",
       "      <td>-0.019188</td>\n",
       "      <td>-0.006048</td>\n",
       "      <td>0.003151</td>\n",
       "      <td>0.004778</td>\n",
       "      <td>0.008629</td>\n",
       "      <td>-0.001500</td>\n",
       "      <td>0.011640</td>\n",
       "      <td>0.020839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2018-01-22</td>\n",
       "      <td>282.690002</td>\n",
       "      <td>1331.9</td>\n",
       "      <td>0.8155</td>\n",
       "      <td>110.92</td>\n",
       "      <td>78.089996</td>\n",
       "      <td>108.139999</td>\n",
       "      <td>0.033904</td>\n",
       "      <td>0.058645</td>\n",
       "      <td>0.101848</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.052375</td>\n",
       "      <td>-0.004716</td>\n",
       "      <td>-0.008584</td>\n",
       "      <td>-0.016318</td>\n",
       "      <td>0.003454</td>\n",
       "      <td>0.013987</td>\n",
       "      <td>0.061646</td>\n",
       "      <td>0.057779</td>\n",
       "      <td>0.050044</td>\n",
       "      <td>0.069816</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2018-01-23</td>\n",
       "      <td>283.290009</td>\n",
       "      <td>1336.7</td>\n",
       "      <td>0.8131</td>\n",
       "      <td>110.31</td>\n",
       "      <td>79.169998</td>\n",
       "      <td>108.400002</td>\n",
       "      <td>0.034207</td>\n",
       "      <td>0.058711</td>\n",
       "      <td>0.109679</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.062018</td>\n",
       "      <td>-0.009963</td>\n",
       "      <td>-0.006395</td>\n",
       "      <td>-0.006799</td>\n",
       "      <td>-0.005386</td>\n",
       "      <td>-0.012034</td>\n",
       "      <td>0.040021</td>\n",
       "      <td>0.043589</td>\n",
       "      <td>0.043185</td>\n",
       "      <td>0.044598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2018-01-24</td>\n",
       "      <td>283.179993</td>\n",
       "      <td>1356.3</td>\n",
       "      <td>0.8060</td>\n",
       "      <td>109.22</td>\n",
       "      <td>78.889999</td>\n",
       "      <td>108.290001</td>\n",
       "      <td>0.031471</td>\n",
       "      <td>0.058577</td>\n",
       "      <td>0.107816</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.062365</td>\n",
       "      <td>-0.011174</td>\n",
       "      <td>0.011663</td>\n",
       "      <td>0.001007</td>\n",
       "      <td>-0.030745</td>\n",
       "      <td>-0.007595</td>\n",
       "      <td>0.043597</td>\n",
       "      <td>0.066433</td>\n",
       "      <td>0.055778</td>\n",
       "      <td>0.024025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2018-01-25</td>\n",
       "      <td>283.299988</td>\n",
       "      <td>1362.9</td>\n",
       "      <td>0.8067</td>\n",
       "      <td>109.41</td>\n",
       "      <td>78.739998</td>\n",
       "      <td>108.570000</td>\n",
       "      <td>0.033489</td>\n",
       "      <td>0.060294</td>\n",
       "      <td>0.099298</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.088265</td>\n",
       "      <td>-0.015382</td>\n",
       "      <td>0.012148</td>\n",
       "      <td>-0.006032</td>\n",
       "      <td>-0.032211</td>\n",
       "      <td>0.002345</td>\n",
       "      <td>0.075229</td>\n",
       "      <td>0.102759</td>\n",
       "      <td>0.084578</td>\n",
       "      <td>0.058400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2018-01-26</td>\n",
       "      <td>286.579987</td>\n",
       "      <td>1352.1</td>\n",
       "      <td>0.8051</td>\n",
       "      <td>108.72</td>\n",
       "      <td>78.769997</td>\n",
       "      <td>108.370003</td>\n",
       "      <td>0.037882</td>\n",
       "      <td>0.072048</td>\n",
       "      <td>0.116183</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.069697</td>\n",
       "      <td>-0.014857</td>\n",
       "      <td>0.015278</td>\n",
       "      <td>0.000736</td>\n",
       "      <td>-0.026921</td>\n",
       "      <td>0.017818</td>\n",
       "      <td>0.072658</td>\n",
       "      <td>0.102792</td>\n",
       "      <td>0.088251</td>\n",
       "      <td>0.060594</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2018-01-29</td>\n",
       "      <td>284.679993</td>\n",
       "      <td>1340.3</td>\n",
       "      <td>0.8076</td>\n",
       "      <td>108.95</td>\n",
       "      <td>77.760002</td>\n",
       "      <td>108.180000</td>\n",
       "      <td>0.024323</td>\n",
       "      <td>0.062754</td>\n",
       "      <td>0.107058</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.054784</td>\n",
       "      <td>-0.012849</td>\n",
       "      <td>0.007306</td>\n",
       "      <td>-0.002662</td>\n",
       "      <td>-0.010371</td>\n",
       "      <td>0.013152</td>\n",
       "      <td>0.055087</td>\n",
       "      <td>0.075242</td>\n",
       "      <td>0.065274</td>\n",
       "      <td>0.057565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2018-01-30</td>\n",
       "      <td>281.760010</td>\n",
       "      <td>1340.0</td>\n",
       "      <td>0.8064</td>\n",
       "      <td>108.78</td>\n",
       "      <td>77.339996</td>\n",
       "      <td>108.010002</td>\n",
       "      <td>0.017294</td>\n",
       "      <td>0.055835</td>\n",
       "      <td>0.094256</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.042410</td>\n",
       "      <td>-0.011018</td>\n",
       "      <td>0.003968</td>\n",
       "      <td>-0.008733</td>\n",
       "      <td>-0.007164</td>\n",
       "      <td>0.013524</td>\n",
       "      <td>0.044917</td>\n",
       "      <td>0.059902</td>\n",
       "      <td>0.047201</td>\n",
       "      <td>0.048770</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>20 rows × 42 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date          sp     gld      eu      jp         re         bnd  \\\n",
       "0   2018-01-02  268.769989  1316.1  0.8293  112.30  80.599998  109.169998   \n",
       "1   2018-01-03  270.470001  1318.5  0.8323  112.50  80.470001  109.180000   \n",
       "2   2018-01-04  271.609985  1321.6  0.8286  112.75  79.209999  109.110001   \n",
       "3   2018-01-05  273.420013  1322.3  0.8313  113.08  79.290001  109.040001   \n",
       "4   2018-01-08  273.920013  1320.4  0.8357  113.09  79.739998  109.010002   \n",
       "5   2018-01-09  274.540009  1313.7  0.8377  112.66  78.820000  108.709999   \n",
       "6   2018-01-10  274.119995  1319.3  0.8370  111.44  77.860001  108.709999   \n",
       "7   2018-01-11  276.119995  1322.5  0.8311  111.25  77.589996  108.760002   \n",
       "8   2018-01-12  277.920013  1334.9  0.8206  111.04  76.959999  108.739998   \n",
       "9   2018-01-16  276.970001  1339.3  0.8156  110.45  77.169998  108.769997   \n",
       "10  2018-01-17  279.609985  1339.2  0.8206  111.28  77.720001  108.650002   \n",
       "11  2018-01-18  279.140015  1327.2  0.8171  111.11  76.959999  108.410004   \n",
       "12  2018-01-19  280.410004  1333.1  0.8182  110.78  77.459999  108.180000   \n",
       "13  2018-01-22  282.690002  1331.9  0.8155  110.92  78.089996  108.139999   \n",
       "14  2018-01-23  283.290009  1336.7  0.8131  110.31  79.169998  108.400002   \n",
       "15  2018-01-24  283.179993  1356.3  0.8060  109.22  78.889999  108.290001   \n",
       "16  2018-01-25  283.299988  1362.9  0.8067  109.41  78.739998  108.570000   \n",
       "17  2018-01-26  286.579987  1352.1  0.8051  108.72  78.769997  108.370003   \n",
       "18  2018-01-29  284.679993  1340.3  0.8076  108.95  77.760002  108.180000   \n",
       "19  2018-01-30  281.760010  1340.0  0.8064  108.78  77.339996  108.010002   \n",
       "\n",
       "    sp_10_dys  sp_20_dys  sp_60_dys  ...  re_fut_10dys  bnd_fut_10dys  \\\n",
       "0    0.008480   0.016297   0.055407  ...     -0.035732      -0.004763   \n",
       "1    0.008464   0.023965   0.063294  ...     -0.043619      -0.007053   \n",
       "2    0.016619   0.031992   0.069541  ...     -0.022093      -0.008524   \n",
       "3    0.023930   0.038672   0.073836  ...     -0.015134      -0.008254   \n",
       "4    0.023694   0.037301   0.074112  ...     -0.007148      -0.005596   \n",
       "5    0.026279   0.034010   0.078150  ...      0.000888      -0.003863   \n",
       "6    0.025937   0.029327   0.075191  ...      0.011302      -0.001288   \n",
       "7    0.032919   0.035010   0.081593  ...      0.015208      -0.003586   \n",
       "8    0.037518   0.041874   0.087877  ...      0.010395      -0.005150   \n",
       "9    0.037885   0.042573   0.083099  ...      0.002203      -0.006987   \n",
       "10   0.040332   0.049154   0.093123  ...      0.010808      -0.005062   \n",
       "11   0.032055   0.040790   0.085683  ...      0.003768      -0.008210   \n",
       "12   0.032399   0.049556   0.094881  ...     -0.012910      -0.009059   \n",
       "13   0.033904   0.058645   0.101848  ...     -0.052375      -0.004716   \n",
       "14   0.034207   0.058711   0.109679  ...     -0.062018      -0.009963   \n",
       "15   0.031471   0.058577   0.107816  ...     -0.062365      -0.011174   \n",
       "16   0.033489   0.060294   0.099298  ...     -0.088265      -0.015382   \n",
       "17   0.037882   0.072048   0.116183  ...     -0.069697      -0.014857   \n",
       "18   0.024323   0.062754   0.107058  ...     -0.054784      -0.012849   \n",
       "19   0.017294   0.055835   0.094256  ...     -0.042410      -0.011018   \n",
       "\n",
       "    eu_fut_10dys  jp_fut_10dys  gld_fut_10dys  re_sp_10dys_diff  \\\n",
       "0      -0.010491     -0.009083       0.017552         -0.076064   \n",
       "1      -0.018263     -0.012356       0.006598         -0.075674   \n",
       "2      -0.012551     -0.017472       0.008702         -0.054493   \n",
       "3      -0.019006     -0.019102       0.007260         -0.049038   \n",
       "4      -0.027043     -0.024582       0.012345         -0.041355   \n",
       "5      -0.037842     -0.030534       0.032427         -0.030583   \n",
       "6      -0.036201     -0.018216       0.033048         -0.022187   \n",
       "7      -0.031284     -0.022742       0.022382         -0.022674   \n",
       "8      -0.015842     -0.018822       0.004045         -0.013928   \n",
       "9      -0.011280     -0.015120       0.000523         -0.015091   \n",
       "10     -0.018889     -0.018781       0.002912          0.002618   \n",
       "11     -0.021662     -0.015300       0.015597         -0.004973   \n",
       "12     -0.019188     -0.006048       0.003151          0.004778   \n",
       "13     -0.008584     -0.016318       0.003454          0.013987   \n",
       "14     -0.006395     -0.006799      -0.005386         -0.012034   \n",
       "15      0.011663      0.001007      -0.030745         -0.007595   \n",
       "16      0.012148     -0.006032      -0.032211          0.002345   \n",
       "17      0.015278      0.000736      -0.026921          0.017818   \n",
       "18      0.007306     -0.002662      -0.010371          0.013152   \n",
       "19      0.003968     -0.008733      -0.007164          0.013524   \n",
       "\n",
       "    bnd_sp_10dys_diff  eu_sp_10dys_diff  jp_sp_10dys_diff  gld_sp_10dys_diff  \n",
       "0           -0.045095         -0.050823         -0.049415          -0.022780  \n",
       "1           -0.039108         -0.050318         -0.044411          -0.025457  \n",
       "2           -0.040923         -0.044951         -0.049872          -0.023698  \n",
       "3           -0.042158         -0.052910         -0.053005          -0.026644  \n",
       "4           -0.039803         -0.061250         -0.058789          -0.021862  \n",
       "5           -0.035334         -0.069312         -0.062005           0.000957  \n",
       "6           -0.034777         -0.069690         -0.051705          -0.000441  \n",
       "7           -0.041468         -0.069166         -0.060624          -0.015500  \n",
       "8           -0.029473         -0.040166         -0.043146          -0.020278  \n",
       "9           -0.024281         -0.028574         -0.032414          -0.016772  \n",
       "10          -0.013252         -0.027079         -0.026971          -0.005278  \n",
       "11          -0.016951         -0.030403         -0.024041           0.006856  \n",
       "12           0.008629         -0.001500          0.011640           0.020839  \n",
       "13           0.061646          0.057779          0.050044           0.069816  \n",
       "14           0.040021          0.043589          0.043185           0.044598  \n",
       "15           0.043597          0.066433          0.055778           0.024025  \n",
       "16           0.075229          0.102759          0.084578           0.058400  \n",
       "17           0.072658          0.102792          0.088251           0.060594  \n",
       "18           0.055087          0.075242          0.065274           0.057565  \n",
       "19           0.044917          0.059902          0.047201           0.048770  \n",
       "\n",
       "[20 rows x 42 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_test[0: 20]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "dd0063b6-1ad9-45d0-a086-b8f6e2a0c9b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(251, 42)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "30e27e5c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "start\n",
      "0\n",
      "10\n",
      "20\n",
      "30\n",
      "40\n",
      "50\n",
      "60\n",
      "70\n",
      "80\n",
      "90\n",
      "100\n",
      "110\n",
      "120\n",
      "130\n",
      "140\n",
      "150\n",
      "160\n",
      "170\n",
      "180\n",
      "190\n",
      "200\n",
      "210\n",
      "220\n",
      "230\n",
      "240\n",
      "250\n"
     ]
    }
   ],
   "source": [
    "preds, actuals = test_preds(aliases_to_use, baseline_asset, pred_distance, df_test, df_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a354470e-9d90-4b02-bb13-300c7855f4c9",
   "metadata": {},
   "source": [
    "###### import pickle \n",
    "\n",
    "with open('preds.pkl', 'wb') as f:\n",
    "    pickle.dump(preds, f)\n",
    "\n",
    "with open('actuals.pkl', 'wb') as f:\n",
    "    pickle.dump(actuals, f)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "857c67ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "with open(\"preds.pkl\",'rb') as f:\n",
    "    preds = pickle.load(f)\n",
    "    \n",
    "with open(\"actuals.pkl\",'rb') as f:\n",
    "    actuals = pickle.load(f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "035f4422",
   "metadata": {},
   "outputs": [],
   "source": [
    "sign_cor_neg = 0\n",
    "sign_cor_pos = 0\n",
    "incor_actual_neg = 0\n",
    "incor_actual_pos = 0\n",
    "total_diff = 0\n",
    "total_count = 0\n",
    "total_correct = 0\n",
    "\n",
    "for pred, actual in zip(preds['re'], actuals['re']):\n",
    "    if pred != None and not pd.isna(actual):\n",
    "        if pred < 0 and actual < 0:\n",
    "            sign_cor_neg += 1\n",
    "            total_correct += 1\n",
    "        elif pred > 0 and actual > 0:\n",
    "            sign_cor_pos += 1\n",
    "            total_correct += 1\n",
    "        elif actual < 0:\n",
    "            incor_actual_neg += 1\n",
    "        else:\n",
    "            incor_actual_pos +=1\n",
    "        total_count += 1\n",
    "        total_diff += abs(pred - actual)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "44d548df",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pred neg actual neg\n",
      "94\n",
      "pred pos actual pos\n",
      "33\n",
      "pred pos actual neg\n",
      "30\n",
      "pred neg actual pos\n",
      "94\n",
      "-----\n",
      "total neg\n",
      "124\n",
      "total pos\n",
      "127\n",
      "----\n",
      "ave diff\n",
      "0.02305465035863848\n",
      "percent correct\n",
      "0.5059760956175299\n"
     ]
    }
   ],
   "source": [
    "print(\"pred neg actual neg\")\n",
    "print(sign_cor_neg)\n",
    "print(\"pred pos actual pos\")\n",
    "print(sign_cor_pos)\n",
    "print(\"pred pos actual neg\")\n",
    "print(incor_actual_neg) \n",
    "print(\"pred neg actual pos\")\n",
    "print(incor_actual_pos )\n",
    "\n",
    "print(\"-----\")\n",
    "print(\"total neg\")\n",
    "print(sign_cor_neg + incor_actual_neg)\n",
    "print(\"total pos\")\n",
    "print(sign_cor_pos + incor_actual_pos)\n",
    "print(\"----\")\n",
    "print(\"ave diff\")\n",
    "print(total_diff/total_count)\n",
    "print(\"percent correct\")\n",
    "print(total_correct/total_count)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "fcb11bcf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "re\n",
      "long 0.00983 0.00261: 2018-01-17: 1.0002573607433118\n",
      "long 0.00374 -0.0181: 2018-01-31: 0.9995764750966099\n",
      "shorted -0.0166 -0.0011: 2018-02-14: 0.9997645653101535\n",
      "shorted -0.0094 0.01281: 2018-03-01: 0.9985575977853617\n",
      "long 0.00145 0.03572: 2018-03-15: 0.9990754600066364\n",
      "shorted -0.0066 -0.0211: 2018-03-29: 1.000483362344296\n",
      "shorted -0.0120 0.01375: 2018-04-13: 0.9988188774271833\n",
      "shorted -0.0105 -0.0002: 2018-04-27: 0.9988470542863195\n",
      "shorted -0.0113 -0.0041: 2018-05-11: 0.9993149203040391\n",
      "long 0.00148 0.00652: 2018-05-25: 0.9994119320585744\n",
      "shorted -0.0072 0.03947: 2018-06-11: 0.9965593644782496\n",
      "shorted -0.0097 -0.0143: 2018-06-25: 0.9979548808867764\n",
      "shorted -0.0028 -0.0333: 2018-07-10: 0.9988941675888\n",
      "long 0.00557 0.01338: 2018-07-24: 0.9996402611585636\n",
      "shorted -0.0043 0.00784: 2018-08-07: 0.9993016381181417\n",
      "shorted -0.0041 -0.0099: 2018-08-21: 0.9997118115941918\n",
      "shorted -0.0072 -0.0262: 2018-09-05: 1.0015996908904867\n",
      "shorted -0.0084 -0.0317: 2018-09-19: 1.0042905216091789\n",
      "long 0.00106 0.01995: 2018-10-03: 1.0045037984908154\n",
      "shorted -0.0114 0.04640: 2018-10-17: 0.9991639633560327\n",
      "shorted -0.0175 0.02821: 2018-10-31: 0.9942133831320019\n",
      "shorted -0.0154 -0.0041: 2018-11-14: 0.9948493614999192\n",
      "long 0.00150 0.04128: 2018-11-29: 0.9954663227538163\n",
      "long 0.00125 -0.0265: 2018-12-14: 0.9951348969930089\n",
      "shorted -0.0020 0.00510: 2018-12-31: 0.9950310847797961\n",
      "long 0.00784 -0.0049: 2018-01-18: 0.9996100857748887\n",
      "long 0.00297 -0.0061: 2018-02-01: 0.9994276986219067\n",
      "shorted -0.0137 -0.0051: 2018-02-15: 1.0001344183755514\n",
      "shorted -0.0076 0.02907: 2018-03-02: 0.9979237194181927\n",
      "shorted -0.0039 0.03420: 2018-03-16: 0.9965908255747638\n",
      "shorted -0.0114 -0.0331: 2018-04-02: 1.0003782487517954\n",
      "shorted -0.0097 0.02164: 2018-04-16: 0.998277428691526\n",
      "shorted -0.0057 -0.0131: 2018-04-30: 0.9990313943669037\n",
      "shorted -0.0125 0.01813: 2018-05-14: 0.9967547394901436\n",
      "long 0.00494 -0.0046: 2018-05-29: 0.9965277747379265\n",
      "shorted -0.0115 0.02774: 2018-06-12: 0.9933259254534582\n",
      "shorted -0.0081 -0.0018: 2018-06-26: 0.993477244860291\n",
      "shorted -0.0030 -0.0384: 2018-07-11: 0.9946515172087702\n",
      "long 0.00152 0.00796: 2018-07-25: 0.9947723862752338\n",
      "shorted -0.0011 0.00844: 2018-08-08: 0.9946765831099551\n",
      "shorted -0.0005 0.00191: 2018-08-22: 0.9946667966602537\n",
      "shorted -0.0094 -0.0314: 2018-09-06: 0.9976337810692321\n",
      "shorted -0.0076 -0.0351: 2018-09-20: 1.0003298664792508\n",
      "shorted -0.0016 0.03516: 2018-10-04: 0.9997402435481655\n",
      "shorted -0.0147 0.02678: 2018-10-18: 0.9957768324880988\n",
      "shorted -0.0174 0.01824: 2018-11-01: 0.992611493761611\n",
      "shorted -0.0048 0.01659: 2018-11-15: 0.9918172162217421\n",
      "long 0.00096 0.01405: 2018-11-30: 0.9919512761903029\n",
      "long 0.00138 -0.0263: 2018-12-17: 0.9915883887829078\n",
      "long 0.00414 0.00477: 2018-01-19: 1.0001978800172564\n",
      "shorted -0.0035 -0.0098: 2018-02-02: 1.0005503816585286\n",
      "shorted -0.0120 -0.0135: 2018-02-16: 1.0021792532948162\n",
      "shorted -0.0024 0.03307: 2018-03-05: 1.0013648844966414\n",
      "shorted -0.0053 0.02471: 2018-03-19: 1.000030202595368\n",
      "shorted -0.0118 -0.0246: 2018-04-03: 1.0029387198896857\n",
      "shorted -0.0070 0.02442: 2018-04-17: 1.0012134526309187\n",
      "shorted -0.0104 -0.0262: 2018-05-01: 1.003970106485838\n",
      "shorted -0.0141 0.02603: 2018-05-15: 1.0002699109745077\n",
      "long 0.00622 -0.0211: 2018-05-30: 0.9989524405721305\n",
      "shorted -0.0053 0.04783: 2018-06-13: 0.9963750433912344\n",
      "shorted -0.0071 -0.0111: 2018-06-27: 0.9971665989544224\n",
      "shorted -0.0046 -0.0270: 2018-07-12: 0.9984133077089854\n",
      "shorted -2.7093 0.00543: 2018-07-26: 0.9984118361914458\n",
      "shorted -0.0037 0.00496: 2018-08-09: 0.998224379800311\n",
      "shorted -0.0012 -0.0075: 2018-08-23: 0.9983150706836517\n",
      "shorted -0.0117 -0.0162: 2018-09-07: 1.0002279329302086\n",
      "shorted -0.0059 -0.0357: 2018-09-21: 1.0023692485803024\n",
      "shorted -0.0042 0.03917: 2018-10-05: 1.0007008806358608\n",
      "shorted -0.0147 0.01578: 2018-10-19: 0.9983708168825772\n",
      "shorted -0.0151 0.03079: 2018-11-02: 0.9937219707759315\n",
      "shorted -0.0040 -0.0016: 2018-11-16: 0.9937867490419434\n",
      "long 0.00505 0.03121: 2018-12-03: 0.9953543702108432\n",
      "long 0.00073 -0.0064: 2018-12-18: 0.995307153877531\n",
      "long 0.00359 0.01398: 2018-01-22: 1.0005032026206393\n",
      "shorted -0.0035 -0.0265: 2018-02-05: 1.0014345065546912\n",
      "shorted -0.0157 -0.0036: 2018-02-20: 1.00201951053752\n",
      "shorted -9.7866 0.02659: 2018-03-06: 1.0020169021692007\n",
      "shorted -0.0063 0.02793: 2018-03-20: 1.0002359393285165\n",
      "shorted -0.0113 -0.0273: 2018-04-04: 1.0033381686781746\n",
      "shorted -0.0079 0.03002: 2018-04-18: 1.0009320547859717\n",
      "shorted -0.0098 -0.0369: 2018-05-02: 1.0045965335036053\n",
      "shorted -0.0131 0.03753: 2018-05-16: 0.9996425351813736\n",
      "long 0.00550 -0.0182: 2018-05-31: 0.9986381576746881\n",
      "shorted -0.0043 0.04546: 2018-06-14: 0.9966522830167619\n",
      "shorted -0.0098 -0.0204: 2018-06-28: 0.9986536760471857\n",
      "shorted -0.0017 -0.0256: 2018-07-13: 0.9990912223721902\n",
      "long 0.00058 0.00610: 2018-07-27: 0.9991268141086713\n",
      "shorted -0.0046 0.00643: 2018-08-10: 0.9988304074708406\n",
      "shorted -0.0028 -0.0020: 2018-08-24: 0.9988897171318658\n",
      "shorted -0.0104 -0.0348: 2018-09-10: 1.0025325113091295\n",
      "shorted -0.0049 -0.0092: 2018-09-24: 1.0029929720750095\n",
      "shorted -0.0078 0.01749: 2018-10-08: 1.0016174820484165\n",
      "shorted -0.0126 0.03404: 2018-10-22: 0.997306952293488\n",
      "shorted -0.0151 0.03826: 2018-11-05: 0.9915377234638613\n",
      "shorted -0.0085 -0.0012: 2018-11-19: 0.9916476338606525\n",
      "long 0.00336 0.01908: 2018-12-04: 0.992283742207658\n",
      "long 0.00211 -0.0327: 2018-12-19: 0.9915962630002731\n",
      "long 0.00078 -0.0120: 2018-01-23: 0.9999049370997726\n",
      "shorted -0.0019 -0.0217: 2018-02-06: 1.0003294519731638\n",
      "shorted -0.0142 0.01375: 2018-02-21: 0.9983696569716635\n",
      "shorted -0.0047 0.01517: 2018-03-07: 0.9976499599608394\n",
      "shorted -0.0042 0.02702: 2018-03-21: 0.9964906608853842\n",
      "shorted -0.0088 -0.0288: 2018-04-05: 0.99902237137535\n",
      "shorted -0.0087 0.04169: 2018-04-19: 0.9953745875210215\n",
      "shorted -0.0111 -0.0439: 2018-05-03: 1.0002417691497232\n",
      "shorted -0.0137 0.03584: 2018-05-17: 0.9953182320134983\n",
      "long 0.00433 -0.0048: 2018-06-01: 0.9951078110200609\n",
      "shorted -0.0040 0.03994: 2018-06-15: 0.9934852716231753\n",
      "shorted -0.0076 -0.0251: 2018-06-29: 0.9953933905048685\n",
      "shorted -0.0025 -0.0154: 2018-07-16: 0.9957833359933773\n",
      "shorted -0.0016 0.00271: 2018-07-30: 0.9957379697228886\n",
      "shorted -0.0045 -0.0067: 2018-08-13: 0.9960472069780051\n",
      "shorted -0.0009 0.00227: 2018-08-27: 0.996025420115937\n",
      "shorted -0.0089 -0.0301: 2018-09-11: 0.9987024351733527\n",
      "shorted -0.0077 -0.0050: 2018-09-25: 0.9990904277113285\n",
      "shorted -0.0075 0.02507: 2018-10-09: 0.9972060938871739\n",
      "shorted -0.0148 0.02051: 2018-10-23: 0.9941589747044938\n",
      "shorted -0.0142 0.04730: 2018-11-06: 0.9874381791519603\n",
      "shorted -0.0081 0.01757: 2018-11-20: 0.9860211535370805\n",
      "shorted -0.0031 -0.0039: 2018-12-06: 0.9861442876257115\n",
      "long 0.00312 -0.0331: 2018-12-20: 0.9851232836325222\n",
      "long 0.00271 -0.0075: 2018-01-24: 0.9997937785222375\n",
      "shorted -0.0039 -0.0154: 2018-02-07: 1.000409107504006\n",
      "shorted -0.0172 0.00588: 2018-02-22: 0.9993952840049519\n",
      "long 0.00102 0.02552: 2018-03-08: 0.9996575199510032\n",
      "shorted -0.0073 0.02942: 2018-03-22: 0.9974888481610165\n",
      "shorted -0.0123 -0.0427: 2018-04-06: 1.0027707828948964\n",
      "shorted -0.0092 0.04022: 2018-04-20: 0.9990246761249957\n",
      "shorted -0.0058 -0.0362: 2018-05-04: 1.001149670986264\n",
      "shorted -0.0089 0.03532: 2018-05-18: 0.997985556420126\n",
      "shorted -0.0009 -0.0076: 2018-06-04: 0.9980554734909317\n",
      "shorted -0.0021 0.03066: 2018-06-18: 0.9973885849713484\n",
      "shorted -0.0072 -0.0264: 2018-07-02: 0.9992948525733012\n",
      "long 0.00020 0.00599: 2018-07-17: 0.9993070971087739\n",
      "shorted -0.0020 -0.0103: 2018-07-31: 0.9995162082057204\n",
      "shorted -0.0065 0.00455: 2018-08-14: 0.9992177482537825\n",
      "shorted -0.0038 -0.0072: 2018-08-28: 0.999494676769707\n",
      "shorted -0.0065 -0.0460: 2018-09-12: 1.002491773768724\n",
      "shorted -0.0006 0.02713: 2018-09-26: 1.002304558256958\n",
      "shorted -0.0141 0.04586: 2018-10-10: 0.9958024439541497\n",
      "shorted -0.0239 -0.0276: 2018-10-24: 1.0023781337557252\n",
      "shorted -0.0087 0.05303: 2018-11-07: 0.997737839364535\n",
      "long 0.00072 0.02862: 2018-11-21: 0.9979460323581076\n",
      "shorted -0.0078 0.00040: 2018-12-07: 0.9979138737270334\n",
      "shorted -0.0015 -0.0398: 2018-12-21: 0.9985438907678034\n",
      "long 0.00909 0.00234: 2018-01-25: 1.000213221348917\n",
      "shorted -0.0131 -0.0239: 2018-02-08: 1.0033623807253438\n",
      "shorted -0.0168 -0.0063: 2018-02-23: 1.0044303040049372\n",
      "long 0.00872 0.04034: 2018-03-09: 1.007966580400475\n",
      "shorted -0.0110 0.01764: 2018-03-23: 1.0059945402091643\n",
      "shorted -0.0120 -0.0352: 2018-04-09: 1.0102676409514741\n",
      "shorted -0.0047 0.04167: 2018-04-23: 1.0082870138934985\n",
      "shorted -0.0109 -0.0353: 2018-05-07: 1.0121891687141564\n",
      "shorted -0.0066 0.02971: 2018-05-21: 1.010194341788137\n",
      "long 0.00044 -0.0019: 2018-06-05: 1.0101856151555177\n",
      "shorted -0.0035 0.03808: 2018-06-19: 1.0088137518388083\n",
      "shorted -0.0084 -0.0444: 2018-07-03: 1.0126094976923146\n",
      "long 0.00048 0.01793: 2018-07-18: 1.01269795076622\n",
      "shorted -0.0052 -0.0003: 2018-08-01: 1.0127155586868688\n",
      "shorted -0.0077 -0.0173: 2018-08-15: 1.01407840681285\n",
      "long 0.00076 -0.0008: 2018-08-29: 1.014071415538801\n",
      "shorted -0.0032 -0.0460: 2018-09-13: 1.0156012363810385\n",
      "shorted -5.9490 0.02145: 2018-09-27: 1.015588274487529\n",
      "shorted -0.0136 0.04757: 2018-10-11: 1.009005855790822\n",
      "shorted -0.0269 -0.0192: 2018-10-25: 1.014253006952903\n",
      "shorted -0.0074 0.05389: 2018-11-08: 1.010183912064804\n",
      "shorted -0.0027 0.01773: 2018-11-23: 1.0096873244850624\n",
      "shorted -0.0037 -0.0016: 2018-12-10: 1.0097516213688995\n",
      "long 6.45776 -0.0369: 2018-12-24: 1.0097492121151768\n",
      "long 0.00894 0.01781: 2018-01-26: 1.0015930733631682\n",
      "shorted -0.0155 -0.0380: 2018-02-09: 1.007531336100625\n",
      "shorted -0.0158 0.00815: 2018-02-26: 1.006227778713856\n",
      "long 0.00804 0.02112: 2018-03-12: 1.0079377410257457\n",
      "shorted -0.0094 0.01217: 2018-03-26: 1.0067838675110665\n",
      "shorted -0.0072 0.00055: 2018-04-10: 1.0067432500967486\n",
      "shorted -0.0122 0.02034: 2018-04-24: 1.004225140433345\n",
      "shorted -0.0146 -0.0262: 2018-05-08: 1.008099108841223\n",
      "shorted -0.0024 0.01829: 2018-05-22: 1.0076444245218608\n",
      "long 0.00074 0.01324: 2018-06-06: 1.0077433773035225\n",
      "shorted -0.0046 0.03505: 2018-06-20: 1.0060993521704455\n",
      "shorted -0.0085 -0.0350: 2018-07-05: 1.0091140198429112\n",
      "long 0.00044 -0.0048: 2018-07-19: 1.0090923785349173\n",
      "shorted -0.0034 0.00848: 2018-08-02: 1.0087995612163931\n",
      "shorted -0.0064 -0.0165: 2018-08-16: 1.0098656691438945\n",
      "shorted -0.0024 -0.0097: 2018-08-30: 1.0101074999991675\n",
      "shorted -0.0051 -0.0263: 2018-09-14: 1.0114831970501572\n",
      "shorted -0.0030 -0.0050: 2018-09-28: 1.0116386036897735\n",
      "shorted -0.0100 0.05595: 2018-10-12: 1.0059571471319837\n",
      "shorted -0.0203 -0.0015: 2018-10-26: 1.0062796032046464\n",
      "shorted -0.0148 0.03146: 2018-11-09: 1.0015886874517907\n",
      "long 5.99044 0.03061: 2018-11-26: 1.0016070583173662\n",
      "shorted -0.0025 -0.0179: 2018-12-11: 1.0020666228681518\n",
      "shorted -0.0011 -0.0072: 2018-12-26: 1.0021478649384936\n",
      "long 0.01009 0.01315: 2018-01-29: 1.001328172679968\n",
      "shorted -0.0170 -0.0341: 2018-02-12: 1.0071434395234398\n",
      "shorted -0.0152 0.02539: 2018-02-27: 1.0032371289755242\n",
      "long 0.00395 0.03232: 2018-03-13: 1.00452089506219\n",
      "shorted -0.0102 -0.0002: 2018-03-27: 1.0045452664537213\n",
      "shorted -0.0098 -0.0115: 2018-04-11: 1.0056812680907183\n",
      "shorted -0.0091 0.02165: 2018-04-25: 1.0036981628842283\n",
      "shorted -0.0130 -0.0169: 2018-05-09: 1.0059174155928066\n",
      "shorted -0.0016 0.01310: 2018-05-23: 1.0056934257627779\n",
      "long 0.00039 0.02391: 2018-06-07: 1.0057893651607235\n",
      "shorted -0.0075 0.01939: 2018-06-21: 1.0043186125574444\n",
      "shorted -0.0074 -0.0376: 2018-07-06: 1.0071488721190338\n",
      "long 0.00113 0.01015: 2018-07-20: 1.0072650751305872\n",
      "shorted -0.0041 0.00640: 2018-08-03: 1.006994655860651\n",
      "shorted -0.0071 -0.0181: 2018-08-17: 1.0083110510228956\n",
      "shorted -0.0018 -0.0045: 2018-08-31: 1.0083975923072697\n",
      "shorted -0.0082 -0.0465: 2018-09-17: 1.0122486437136329\n",
      "shorted -0.0006 0.01656: 2018-10-01: 1.01213801745461\n",
      "shorted -0.0112 0.06210: 2018-10-15: 1.0050966130681018\n",
      "shorted -0.0227 -0.0008: 2018-10-29: 1.0052931845785722\n",
      "shorted -0.0134 0.01405: 2018-11-12: 1.00339040579315\n",
      "long 0.00232 0.00908: 2018-11-27: 1.0036026781305678\n",
      "long 0.00420 -0.0036: 2018-12-12: 1.0034503704204434\n",
      "long 0.00050 0.00234: 2018-12-27: 1.0034621763720935\n",
      "long 0.00814 0.01352: 2018-01-30: 1.0011013483396451\n",
      "shorted -0.0163 -0.0310: 2018-02-13: 1.0061902248811292\n",
      "shorted -0.0115 0.02365: 2018-02-28: 1.0034479204673468\n",
      "long 0.00222 0.04830: 2018-03-14: 1.0045267140022704\n",
      "shorted -0.0127 -0.0401: 2018-03-28: 1.0096854800446564\n",
      "shorted -0.0101 0.00814: 2018-04-12: 1.0088470944551673\n",
      "shorted -0.0035 0.01941: 2018-04-26: 1.0081598023080542\n",
      "shorted -0.0140 -0.0169: 2018-05-10: 1.01056635288043\n",
      "shorted -0.0003 0.01354: 2018-05-24: 1.0105149019292572\n",
      "shorted -0.0035 0.02851: 2018-06-08: 1.0094804020147201\n",
      "shorted -0.0086 -0.0033: 2018-06-22: 1.009771358055358\n",
      "shorted -0.0033 -0.0241: 2018-07-09: 1.0105962914408153\n",
      "shorted -0.0010 0.01025: 2018-07-23: 1.0104856328967622\n",
      "shorted -0.0033 0.01013: 2018-08-06: 1.010147229359448\n",
      "shorted -0.0042 -0.0263: 2018-08-20: 1.011281100601889\n",
      "shorted -0.0045 -0.0046: 2018-09-04: 1.0114970611585807\n",
      "shorted -0.0082 -0.0384: 2018-09-18: 1.01470198237325\n",
      "long 0.00100 0.01758: 2018-10-02: 1.0148813796252705\n",
      "shorted -0.0112 0.06205: 2018-10-16: 1.0077723344463756\n",
      "shorted -0.0224 0.00171: 2018-10-30: 1.0073838690109065\n",
      "shorted -0.0147 -0.0025: 2018-11-13: 1.0077607866883056\n",
      "long 0.00713 0.02884: 2018-11-28: 1.0098346003477434\n",
      "long 0.00343 -0.0054: 2018-12-13: 1.0096468364660485\n",
      "shorted -0.0032 0.00080: 2018-12-28: 1.009620455148996\n",
      "average\n",
      "0.9982169773415592\n",
      "bnd\n",
      "long 0.00823 -0.0132: 2018-01-17: 0.9989087341438474\n",
      "shorted -0.0025 0.02849: 2018-01-31: 0.9981772939075917\n",
      "long 0.00045 0.00860: 2018-02-14: 0.9982160616476999\n",
      "shorted -0.0033 -0.0260: 2018-03-01: 0.9990933824781644\n",
      "shorted -0.0017 0.04768: 2018-03-15: 0.9982697954437888\n",
      "shorted -0.0050 -0.0117: 2018-03-29: 0.9988604589429634\n",
      "long 0.00784 -0.0129: 2018-04-13: 0.9978418200875789\n",
      "long 0.01160 -0.0247: 2018-04-27: 0.9949769473664563\n",
      "long 0.01523 0.00502: 2018-05-11: 0.995738147258328\n",
      "long 0.00845 -0.0280: 2018-05-25: 0.993374868611195\n",
      "long 0.00964 0.02941: 2018-06-11: 0.9961941639849516\n",
      "long 0.00148 -0.0257: 2018-06-25: 0.9958124419560878\n",
      "long 0.00791 -0.0115: 2018-07-10: 0.9949052294851359\n",
      "long 0.00535 -0.0159: 2018-07-24: 0.9940530719104187\n",
      "long 0.01047 0.00423: 2018-08-07: 0.9944941566025821\n",
      "shorted -0.0001 -0.0147: 2018-08-21: 0.9945098611559186\n",
      "long 0.00836 -0.0148: 2018-09-05: 0.9932756105977316\n",
      "long 0.01027 -0.0053: 2018-09-19: 0.9927316587254417\n",
      "long 0.01276 0.03548: 2018-10-03: 0.997227432065836\n",
      "long 0.00256 0.03558: 2018-10-17: 0.9981380074777924\n",
      "long 0.00220 -0.0006: 2018-10-31: 0.998124574609222\n",
      "long 6.83632 -0.0087: 2018-11-14: 0.9981239796412367\n",
      "long 0.00339 0.05550: 2018-11-29: 1.000002564331338\n",
      "shorted -0.0024 0.04931: 2018-12-14: 0.9988182793303467\n",
      "shorted -0.0079 -0.0423: 2018-12-31: 1.00216494302188\n",
      "long 0.00311 -0.0169: 2018-01-18: 0.9994724313885205\n",
      "long 0.00078 0.02171: 2018-02-01: 0.9996433099337413\n",
      "shorted -0.0017 0.01324: 2018-02-15: 0.9994166003238057\n",
      "shorted -0.0009 -0.0167: 2018-03-02: 0.9995770993546365\n",
      "shorted -0.0049 0.06288: 2018-03-16: 0.9964724595131299\n",
      "shorted -0.0033 -0.0390: 2018-04-02: 0.9977791756433687\n",
      "long 0.00867 0.00287: 2018-04-16: 0.9980276443440073\n",
      "long 0.01083 -0.0342: 2018-04-30: 0.9943189412685318\n",
      "long 0.01611 0.02452: 2018-05-14: 0.9982503675450667\n",
      "long 0.00581 -0.0475: 2018-05-29: 0.9954871948686435\n",
      "long 0.01085 0.02984: 2018-06-12: 0.9987109098385607\n",
      "long 0.00376 -0.0171: 2018-06-26: 0.9980644074743067\n",
      "long 0.00786 -0.0278: 2018-07-11: 0.9958746965256263\n",
      "long 0.00585 -0.0070: 2018-07-25: 0.9954619064562801\n",
      "long 0.01107 0.00525: 2018-08-08: 0.9960417244763518\n",
      "shorted -0.0021 -0.0114: 2018-08-22: 0.9962835391969795\n",
      "long 0.00553 -0.0264: 2018-09-06: 0.9948249755142091\n",
      "long 0.01030 0.00632: 2018-09-20: 0.9954727521180601\n",
      "long 0.01105 0.04409: 2018-10-04: 1.0003262822864105\n",
      "long 0.00537 0.00930: 2018-10-18: 1.0008267363427643\n",
      "long 0.00604 0.00322: 2018-11-01: 1.0010222353462357\n",
      "shorted -0.0012 -0.0059: 2018-11-15: 1.0010963271173732\n",
      "long 0.00052 0.08180: 2018-11-30: 1.0015229801335135\n",
      "shorted -0.0044 0.02813: 2018-12-17: 1.0002758859146814\n",
      "long 0.00308 0.00862: 2018-01-19: 1.0002666051984255\n",
      "shorted -0.0016 0.00476: 2018-02-02: 1.0001867423235975\n",
      "shorted -0.0013 -0.0003: 2018-02-16: 1.000191708774064\n",
      "shorted -0.0018 0.00803: 2018-03-05: 1.0000452510124522\n",
      "shorted -0.0045 0.03771: 2018-03-19: 0.998329794397386\n",
      "long 0.00019 -0.0354: 2018-04-03: 0.9982603888198439\n",
      "long 0.00756 0.00823: 2018-04-17: 0.998882647578027\n",
      "long 0.01134 -0.0266: 2018-05-01: 0.9958576160395983\n",
      "long 0.01396 0.00639: 2018-05-15: 0.9967474094155201\n",
      "long 0.00902 -0.0290: 2018-05-30: 0.9941304399169923\n",
      "long 0.01001 0.03756: 2018-06-13: 0.9978696441249721\n",
      "long 0.00180 -0.0356: 2018-06-27: 0.9972291017168777\n",
      "long 0.00851 -0.0180: 2018-07-12: 0.995694970215236\n",
      "long 0.00503 -0.0061: 2018-07-26: 0.9953887953971337\n",
      "long 0.01098 0.00322: 2018-08-09: 0.9957417914990914\n",
      "shorted -0.0010 -0.0138: 2018-08-23: 0.9958831401945719\n",
      "long 0.00920 -0.0185: 2018-09-07: 0.9941806361605836\n",
      "long 0.00758 0.00356: 2018-09-21: 0.9944495208431805\n",
      "long 0.01255 0.04058: 2018-10-05: 0.9995167100991488\n",
      "long 0.00482 0.01252: 2018-10-19: 1.0001201683886898\n",
      "long 0.00557 -0.0007: 2018-11-02: 1.0000805091316511\n",
      "shorted -0.0033 -0.0190: 2018-11-16: 1.0007148322150252\n",
      "long 0.00484 0.09664: 2018-12-03: 1.0053991471475698\n",
      "shorted -0.0091 0.05366: 2018-12-18: 1.000444395220157\n",
      "long 0.00126 0.06164: 2018-01-22: 1.0007793881915206\n",
      "shorted -0.0085 -0.0370: 2018-02-05: 1.0039516835633835\n",
      "long 0.00223 -0.0079: 2018-02-20: 1.0037725584738393\n",
      "long 0.00153 0.00707: 2018-03-06: 1.0038817423547577\n",
      "shorted -0.0016 0.03103: 2018-03-20: 1.0033726184409557\n",
      "long 0.00017 -0.0284: 2018-04-04: 1.0033231286740103\n",
      "long 0.00883 0.01833: 2018-04-18: 1.004947723546894\n",
      "long 0.00912 -0.0390: 2018-05-02: 1.001364414092016\n",
      "long 0.01442 0.01704: 2018-05-16: 1.003825801692588\n",
      "long 0.00766 -0.0345: 2018-05-31: 1.0011665780599976\n",
      "long 0.01492 0.03181: 2018-06-14: 1.005919523987897\n",
      "shorted -0.0028 -0.0294: 2018-06-28: 1.0067793996765468\n",
      "long 0.00830 -0.0105: 2018-07-13: 1.0058943598784797\n",
      "long 0.00534 -0.0047: 2018-07-27: 1.0056379529469028\n",
      "long 0.01150 -0.0106: 2018-08-10: 1.004404956509886\n",
      "long 0.00041 -0.0097: 2018-08-24: 1.004364697314285\n",
      "long 0.00476 -0.0153: 2018-09-10: 1.003631138069597\n",
      "long 0.00845 0.00084: 2018-09-24: 1.0037024002170425\n",
      "long 0.00914 0.04508: 2018-10-08: 1.007839007684157\n",
      "long 0.00802 0.00349: 2018-10-22: 1.0081217893640488\n",
      "long 0.00453 0.02097: 2018-11-05: 1.0090807712723828\n",
      "shorted -0.0046 -0.0001: 2018-11-19: 1.0090885335795694\n",
      "long 0.00301 0.07845: 2018-12-04: 1.0114739821894525\n",
      "shorted -0.0073 0.00258: 2018-12-19: 1.0112817681400583\n",
      "shorted -0.0001 0.04002: 2018-01-23: 0.999933946099029\n",
      "shorted -0.0045 -0.0124: 2018-02-06: 1.0005057796671153\n",
      "long 0.00408 -0.0096: 2018-02-21: 1.0001118992045688\n",
      "shorted -0.0024 0.00870: 2018-03-07: 0.9998947255769657\n",
      "shorted -0.0017 0.02015: 2018-03-21: 0.9995447928587009\n",
      "long 0.00122 -0.0157: 2018-04-05: 0.9993510819341297\n",
      "long 0.00766 0.01861: 2018-04-19: 1.0007769780034605\n",
      "long 0.00899 -0.0429: 2018-05-03: 0.9969118180956977\n",
      "long 0.01632 0.00415: 2018-05-17: 0.9975875130944336\n",
      "long 0.00942 -0.0147: 2018-06-01: 0.9961975380642932\n",
      "long 0.00808 0.02526: 2018-06-15: 0.9982316078352875\n",
      "shorted -0.0010 -0.0290: 2018-06-29: 0.9985300079995685\n",
      "long 0.00967 -0.0061: 2018-07-16: 0.9979378286618835\n",
      "long 0.00526 -0.0046: 2018-07-30: 0.9976929131609432\n",
      "long 0.00836 -0.0244: 2018-08-13: 0.9956552692510382\n",
      "long 0.00518 -0.0055: 2018-08-27: 0.9953689916985287\n",
      "long 0.00605 -0.0098: 2018-09-11: 0.9947753496191543\n",
      "long 0.00697 0.00326: 2018-09-25: 0.9950015347673781\n",
      "long 0.00843 0.04836: 2018-10-09: 0.9990587704405814\n",
      "long 0.00891 -0.0090: 2018-10-23: 0.9982515157693694\n",
      "long 0.00293 0.04478: 2018-11-06: 0.9995652040451891\n",
      "shorted -0.0043 -0.0146: 2018-11-20: 1.0002080239734563\n",
      "long 0.00247 0.08875: 2018-12-06: 1.002401788342119\n",
      "shorted -0.0075 -0.0228: 2018-12-20: 1.0041250710836667\n",
      "long 0.00060 0.04359: 2018-01-24: 1.0002618705180244\n",
      "shorted -0.0048 -0.0169: 2018-02-07: 1.0010749850567062\n",
      "long 0.00342 -0.0117: 2018-02-22: 1.0006729545948494\n",
      "shorted -0.0004 0.03842: 2018-03-08: 1.0004874085699935\n",
      "shorted -0.0061 0.01779: 2018-03-22: 0.9993951078625753\n",
      "long 0.00152 -0.0350: 2018-04-06: 0.9988609115291093\n",
      "long 0.01142 0.00089: 2018-04-20: 0.998962688592318\n",
      "long 0.01150 -0.0252: 2018-05-04: 0.9960606870360973\n",
      "long 0.01312 -0.0081: 2018-05-18: 0.9949987360903464\n",
      "long 0.00933 -0.0053: 2018-06-04: 0.9944994532326024\n",
      "long 0.00801 0.01784: 2018-06-18: 0.9959224056838916\n",
      "shorted -0.0005 -0.0282: 2018-07-02: 0.9960863400528839\n",
      "long 0.00998 -0.0057: 2018-07-17: 0.9955101791388243\n",
      "long 0.00502 -0.0079: 2018-07-31: 0.995114624317878\n",
      "long 0.00930 -0.0193: 2018-08-14: 0.9933261817494241\n",
      "long 0.00396 -0.0027: 2018-08-28: 0.9932165787597771\n",
      "long 0.00637 -0.0048: 2018-09-12: 0.9929064061954591\n",
      "long 0.00405 0.02905: 2018-09-26: 0.9940766782279887\n",
      "long 0.00438 0.04989: 2018-10-10: 0.9962536972230246\n",
      "long 0.00890 -0.0643: 2018-10-24: 0.990539883117326\n",
      "long 0.00909 0.06150: 2018-11-07: 0.9960836714934551\n",
      "shorted -0.0038 0.01311: 2018-11-21: 0.9955843819152899\n",
      "shorted -0.0008 0.08970: 2018-12-07: 0.9948566054019051\n",
      "shorted -0.0103 -0.0607: 2018-12-21: 1.0011301826079795\n",
      "long 0.00169 0.07522: 2018-01-25: 1.0012717562852909\n",
      "shorted -0.0096 -0.0688: 2018-02-08: 1.0079319798197315\n",
      "long 0.00889 -0.0175: 2018-02-23: 1.0063564821188298\n",
      "long 0.00062 0.07691: 2018-03-09: 1.0068396238054802\n",
      "shorted -0.0081 -0.0077: 2018-03-23: 1.0074759371179958\n",
      "long 0.00154 -0.0311: 2018-04-09: 1.0069920087319761\n",
      "long 0.01063 -0.0026: 2018-04-23: 1.0067098716991498\n",
      "long 0.01179 -0.0288: 2018-05-07: 1.0032805414662358\n",
      "long 0.01362 -0.0006: 2018-05-21: 1.0031942777874516\n",
      "long 0.00843 -0.0005: 2018-06-05: 1.0031511270362972\n",
      "long 0.00772 0.01858: 2018-06-19: 1.0045906337710946\n",
      "long 0.00102 -0.0364: 2018-07-03: 1.004216436184543\n",
      "long 0.01008 -0.0051: 2018-07-18: 1.0036977688907172\n",
      "long 0.00545 0.00277: 2018-08-01: 1.00385001844473\n",
      "long 0.00555 -0.0341: 2018-08-15: 1.0019462327912456\n",
      "long 0.00775 -0.0024: 2018-08-29: 1.0017541725181438\n",
      "long 0.00502 -0.0017: 2018-09-13: 1.0016643613793874\n",
      "long 0.00367 0.05509: 2018-09-27: 1.0036920939488716\n",
      "long 0.00515 0.00710: 2018-10-11: 1.004060043452012\n",
      "long 0.01010 -0.0447: 2018-10-25: 0.9995168986657036\n",
      "long 0.00716 0.06765: 2018-11-08: 1.0043591713496005\n",
      "shorted -0.0053 0.00548: 2018-11-23: 1.0040649615028636\n",
      "long 0.00044 0.11552: 2018-12-10: 1.0045832618525643\n",
      "shorted -0.0143 -0.0946: 2018-12-24: 1.0182108517232094\n",
      "long 0.00323 0.07265: 2018-01-26: 1.0023515551221083\n",
      "shorted -0.0062 -0.0631: 2018-02-09: 1.006301863708483\n",
      "long 0.00811 -0.0048: 2018-02-26: 1.0059052131466524\n",
      "shorted -0.0032 0.04946: 2018-03-12: 1.0043054408059204\n",
      "shorted -0.0037 0.00313: 2018-03-26: 1.0041886392114907\n",
      "long 0.00128 -0.0021: 2018-04-10: 1.0041601800352535\n",
      "long 0.00702 -0.0161: 2018-04-24: 1.0030233732834186\n",
      "long 0.01238 -0.0249: 2018-05-08: 0.9999279074989302\n",
      "long 0.01253 -0.0141: 2018-05-22: 0.9981533904568798\n",
      "long 0.00916 0.00647: 2018-06-06: 0.998746325920774\n",
      "long 0.00930 0.01508: 2018-06-20: 1.0001487069664934\n",
      "long 0.00186 -0.0236: 2018-07-05: 0.9997086306246141\n",
      "long 0.00633 -0.0154: 2018-07-19: 0.9987284500054017\n",
      "long 0.00767 0.00032: 2018-08-02: 0.9987535969816922\n",
      "long 0.00592 -0.0217: 2018-08-16: 0.9974657073707973\n",
      "long 0.00665 -0.0090: 2018-08-30: 0.9968652202109707\n",
      "long 0.00843 -0.0008: 2018-09-14: 0.9967920698949092\n",
      "long 0.00647 0.04350: 2018-09-28: 0.9996016263975774\n",
      "long 0.00309 0.03991: 2018-10-12: 1.0008377004030775\n",
      "long 0.00490 -0.0540: 2018-10-26: 0.9981838704349801\n",
      "long 0.00525 0.04164: 2018-11-09: 1.000367648863441\n",
      "shorted -2.5521 0.02167: 2018-11-26: 1.0003621142954298\n",
      "shorted -0.0007 0.06871: 2018-12-11: 0.9998694843354027\n",
      "shorted -0.0066 -0.0445: 2018-12-26: 1.0028418464342683\n",
      "long 0.00111 0.05508: 2018-01-29: 1.000615001008577\n",
      "shorted -0.0030 -0.0371: 2018-02-12: 1.001750560027934\n",
      "long 0.00509 -0.0074: 2018-02-27: 1.0013675987243889\n",
      "shorted -0.0040 0.06116: 2018-03-13: 0.998911301946091\n",
      "shorted -0.0081 -0.0109: 2018-03-27: 0.9997946380046335\n",
      "long 0.00768 -0.0120: 2018-04-11: 0.9988704783966117\n",
      "long 0.00917 -0.0232: 2018-04-25: 0.9967421966884138\n",
      "long 0.01471 -0.0140: 2018-05-09: 0.9946829896101176\n",
      "long 0.00935 -0.0118: 2018-05-23: 0.993581950377349\n",
      "long 0.00861 0.01071: 2018-06-07: 0.9944995455032595\n",
      "long 0.00698 0.00117: 2018-06-21: 0.9945813037996302\n",
      "long 0.00267 -0.0168: 2018-07-06: 0.9941329859411989\n",
      "long 0.00683 -0.0168: 2018-07-20: 0.9929887096968844\n",
      "long 0.01023 -0.0005: 2018-08-03: 0.9929354389712515\n",
      "long 0.00143 -0.0188: 2018-08-17: 0.9926663784603047\n",
      "long 0.00974 -0.0036: 2018-08-31: 0.9923167213549221\n",
      "long 0.00610 -0.0123: 2018-09-17: 0.9915701846434979\n",
      "long 0.00918 0.05408: 2018-10-01: 0.9964952991159503\n",
      "long 0.00379 0.03946: 2018-10-15: 0.9979878530347704\n",
      "long 0.00350 -0.0375: 2018-10-29: 0.9966719025714155\n",
      "long 0.00319 0.01865: 2018-11-12: 0.9972657893957318\n",
      "long 0.00068 0.01897: 2018-11-27: 0.9973956801430128\n",
      "long 0.00167 0.06863: 2018-12-12: 0.9985430443087281\n",
      "shorted -0.0067 -0.0371: 2018-12-27: 1.0010377357042726\n",
      "long 0.00200 0.04491: 2018-01-30: 1.0008990502683102\n",
      "shorted -0.0033 -0.0217: 2018-02-13: 1.001630252809978\n",
      "long 0.00410 -0.0136: 2018-02-28: 1.0010696342711458\n",
      "shorted -0.0040 0.05797: 2018-03-14: 0.9987040187047239\n",
      "shorted -0.0069 -0.0250: 2018-03-28: 1.0004492648498156\n",
      "long 0.00808 -0.0100: 2018-04-12: 0.999636546761332\n",
      "long 0.01214 -0.0218: 2018-04-26: 0.9969879217726181\n",
      "long 0.01386 -0.0021: 2018-05-10: 0.996696142203081\n",
      "long 0.00843 -0.0210: 2018-05-24: 0.9949238536526647\n",
      "long 0.00987 0.01419: 2018-06-08: 0.9963188572389494\n",
      "long 0.00414 -0.0079: 2018-06-22: 0.9959922825448091\n",
      "long 0.00514 -0.0122: 2018-07-09: 0.9953662800098565\n",
      "long 0.00571 -0.0145: 2018-07-23: 0.994539755952445\n",
      "long 0.01018 0.00232: 2018-08-06: 0.9947749930155845\n",
      "shorted -5.6792 -0.0202: 2018-08-20: 0.9947864113194673\n",
      "long 0.00921 -0.0096: 2018-09-04: 0.9939028104405293\n",
      "long 0.00889 -0.0029: 2018-09-18: 0.9936382001237496\n",
      "long 0.01003 0.03239: 2018-10-02: 0.9968684888087915\n",
      "long 0.00328 0.04408: 2018-10-16: 0.9983115077360248\n",
      "long 0.00333 -0.0187: 2018-10-30: 0.9976867323983998\n",
      "shorted -0.0009 -0.0043: 2018-11-13: 0.9977284597303782\n",
      "long 0.00370 0.03993: 2018-11-28: 0.9992053567996928\n",
      "shorted -0.0006 0.07293: 2018-12-13: 0.9987500933876939\n",
      "shorted -0.0085 -0.0372: 2018-12-28: 1.0019457894742612\n",
      "average\n",
      "1.0043458469324433\n",
      "eu\n",
      "long 0.00088 -0.0270: 2018-01-17: 0.9997610032551784\n",
      "long 0.00212 0.04130: 2018-01-31: 1.0006374529366777\n",
      "long 0.01171 0.02195: 2018-02-14: 1.0032109388771324\n",
      "shorted -0.0042 -0.0303: 2018-03-01: 1.0044999236668901\n",
      "shorted -0.0054 0.04333: 2018-03-15: 1.0021421115212144\n",
      "shorted -0.0090 -0.0100: 2018-03-29: 1.0030505431970922\n",
      "shorted -0.0060 0.01133: 2018-04-13: 1.0023661858744406\n",
      "long 0.00086 -0.0079: 2018-04-27: 1.0022970532500588\n",
      "long 0.00623 0.02752: 2018-05-11: 1.0040160688322808\n",
      "shorted -0.0003 -0.0346: 2018-05-25: 1.0041410852214694\n",
      "long 0.00219 0.03397: 2018-06-11: 1.0048890493807627\n",
      "shorted -0.0065 -0.0326: 2018-06-25: 1.007042599329822\n",
      "shorted -0.0060 -0.0046: 2018-07-10: 1.0073285766697302\n",
      "shorted -0.0065 -0.0067: 2018-07-24: 1.0077734337295894\n",
      "long 0.00413 -0.0002: 2018-08-07: 1.0077640412940205\n",
      "shorted -0.0047 -0.0143: 2018-08-21: 1.0084494545707559\n",
      "long 0.00461 -0.0112: 2018-09-05: 1.0079233695327878\n",
      "long 0.00504 0.01520: 2018-09-19: 1.008696970864719\n",
      "long 0.00277 0.03656: 2018-10-03: 1.0097222693215429\n",
      "shorted -0.0021 0.05192: 2018-10-17: 1.0085770368765148\n",
      "shorted -0.0003 0.00158: 2018-10-31: 1.0085720250653303\n",
      "shorted -0.0055 -0.0211: 2018-11-14: 1.0097565554961645\n",
      "shorted -0.0058 0.05648: 2018-11-29: 1.0064386175892661\n",
      "shorted -0.0089 0.02647: 2018-12-14: 1.0040597175257382\n",
      "shorted -0.0140 -0.0368: 2018-12-31: 1.0092373074919323\n",
      "shorted -0.0020 -0.0304: 2018-01-18: 1.0006333832599912\n",
      "long 0.00663 0.03061: 2018-02-01: 1.0026655745836293\n",
      "long 0.00714 0.02972: 2018-02-15: 1.0047942089570665\n",
      "long 0.00069 -0.0166: 2018-03-02: 1.0046772765926157\n",
      "shorted -0.0092 0.05990: 2018-03-16: 0.9990824486435637\n",
      "shorted -0.0054 -0.0444: 2018-04-02: 1.0014978695402486\n",
      "shorted -0.0107 0.03543: 2018-04-16: 0.997691818346931\n",
      "long 0.00032 -0.0192: 2018-04-30: 0.9976302827817636\n",
      "long 0.00533 0.04801: 2018-05-14: 1.0001875327793044\n",
      "shorted -0.0026 -0.0542: 2018-05-29: 1.0016442124584783\n",
      "long 0.00531 0.03458: 2018-06-12: 1.0034857910505222\n",
      "shorted -0.0052 -0.0215: 2018-06-26: 1.004616174078656\n",
      "shorted -0.0054 -0.0304: 2018-07-11: 1.0062888124808973\n",
      "shorted -0.0059 0.00486: 2018-07-25: 1.0059979955052096\n",
      "long 0.00736 -0.0012: 2018-08-08: 1.0059083239826858\n",
      "shorted -0.0069 -0.0090: 2018-08-22: 1.0065382914494347\n",
      "long 0.00163 -0.0320: 2018-09-06: 1.0060099086653458\n",
      "long 0.00694 0.03694: 2018-09-20: 1.0085897911364912\n",
      "long 0.00127 0.05034: 2018-10-04: 1.0092396420323893\n",
      "long 0.00212 0.01434: 2018-10-18: 1.0095477205917747\n",
      "long 0.00162 0.00897: 2018-11-01: 1.0096946601241605\n",
      "shorted -0.0110 -0.0086: 2018-11-15: 1.0106522028820752\n",
      "shorted -0.0075 0.07066: 2018-11-30: 1.0052584608756183\n",
      "shorted -0.0090 0.02062: 2018-12-17: 1.0033874253882584\n",
      "shorted -0.0001 -0.0015: 2018-01-19: 1.0000023338617108\n",
      "long 0.00823 0.01298: 2018-02-02: 1.001071558435727\n",
      "long 0.00141 0.00895: 2018-02-16: 1.0011983214328928\n",
      "long 0.00095 0.00636: 2018-03-05: 1.0012589588091918\n",
      "shorted -0.0080 0.04111: 2018-03-19: 0.9979358999599808\n",
      "shorted -0.0069 -0.0441: 2018-04-03: 1.0009798628259892\n",
      "shorted -0.0090 0.05070: 2018-04-17: 0.9964056763948966\n",
      "long 0.00318 -0.0099: 2018-05-01: 0.9960917821052294\n",
      "long 0.00302 0.00946: 2018-05-15: 0.99637739703964\n",
      "shorted -0.0012 -0.0308: 2018-05-30: 0.9967765395966951\n",
      "long 0.00349 0.05185: 2018-06-13: 0.9985815564699458\n",
      "shorted -0.0087 -0.0474: 2018-06-27: 1.002721432207693\n",
      "shorted -0.0049 -0.0116: 2018-07-12: 1.0033042727656651\n",
      "shorted -0.0049 0.00402: 2018-07-26: 1.003103610545702\n",
      "long 0.00878 -0.0036: 2018-08-09: 1.0027796170819665\n",
      "shorted -0.0069 -0.0074: 2018-08-23: 1.0032984422943423\n",
      "long 0.00379 -0.0321: 2018-09-07: 1.0020753959887778\n",
      "long 0.00453 0.03402: 2018-09-21: 1.0036227961994089\n",
      "long 0.00286 0.04100: 2018-10-05: 1.0048015903100578\n",
      "long 0.00175 0.02683: 2018-10-19: 1.0052758628607723\n",
      "shorted -0.0001 -0.0095: 2018-11-02: 1.0052873383600853\n",
      "shorted -0.0126 -0.0145: 2018-11-16: 1.0071327943343438\n",
      "shorted -0.0034 0.08592: 2018-12-03: 1.0041674446307045\n",
      "shorted -0.0133 0.03965: 2018-12-18: 0.9988359622755196\n",
      "shorted -0.0003 0.05777: 2018-01-22: 0.9998003700377018\n",
      "long 0.00399 -0.0258: 2018-02-05: 0.9987696586012134\n",
      "long 0.00100 -0.0107: 2018-02-20: 0.99866212279302\n",
      "long 0.00559 0.02022: 2018-03-06: 0.9997913045290592\n",
      "shorted -0.0056 0.02445: 2018-03-20: 0.9984188113036065\n",
      "shorted -0.0068 -0.0336: 2018-04-04: 1.0007261927472573\n",
      "shorted -0.0075 0.06185: 2018-04-18: 0.9960752788950777\n",
      "long 0.00017 -0.0221: 2018-05-02: 0.9960376412912858\n",
      "long 0.00199 0.01457: 2018-05-16: 0.9963273811509465\n",
      "shorted -0.0013 -0.0181: 2018-05-31: 0.9965687212305371\n",
      "long 0.00441 0.02812: 2018-06-14: 0.997805852493105\n",
      "shorted -0.0107 -0.0419: 2018-06-28: 1.002303951931358\n",
      "shorted -0.0055 -0.0040: 2018-07-13: 1.0025316736398837\n",
      "shorted -0.0033 0.01526: 2018-07-27: 1.0020199030411658\n",
      "long 0.00753 -0.0333: 2018-08-10: 0.9994996986420224\n",
      "shorted -0.0037 0.00038: 2018-08-24: 0.9994851030406771\n",
      "long 0.00012 -0.0233: 2018-09-10: 0.9994560470578618\n",
      "long 0.00635 0.03319: 2018-09-24: 1.001563263761295\n",
      "long 3.67246 0.04692: 2018-10-08: 1.0015805220962888\n",
      "long 0.00680 0.01105: 2018-10-22: 1.0023333899045408\n",
      "shorted -0.0038 0.01158: 2018-11-05: 1.0018870423492934\n",
      "shorted -0.0107 0.00523: 2018-11-19: 1.0013230355175957\n",
      "shorted -0.0058 0.06731: 2018-12-04: 0.99735043132471\n",
      "shorted -0.0134 -0.0060: 2018-12-19: 0.9981645636763148\n",
      "shorted -0.0008 0.04358: 2018-01-23: 0.9996407873727\n",
      "long 0.00664 0.00425: 2018-02-06: 0.9999233389007286\n",
      "long 0.00360 -0.0204: 2018-02-21: 0.9991861370023959\n",
      "long 1.33633 0.01457: 2018-03-07: 0.9991863315830524\n",
      "shorted -0.0049 0.02573: 2018-03-21: 0.9979102976237963\n",
      "shorted -0.0075 -0.0209: 2018-04-05: 0.9994851497109587\n",
      "shorted -0.0067 0.05319: 2018-04-19: 0.9958843907231659\n",
      "shorted -0.0001 -0.0193: 2018-05-03: 0.9959129951521976\n",
      "long 0.00303 0.00571: 2018-05-17: 0.9960856522588748\n",
      "shorted -0.0006 -0.0084: 2018-06-01: 0.9961389665367678\n",
      "shorted -0.0013 0.01460: 2018-06-15: 0.9959487504142058\n",
      "shorted -0.0089 -0.0319: 2018-06-29: 0.9987954092949546\n",
      "shorted -0.0049 -0.0018: 2018-07-16: 0.9988862416330627\n",
      "shorted -0.0009 0.01842: 2018-07-30: 0.9987117456251288\n",
      "long 0.00336 -0.0502: 2018-08-13: 0.9970214275121662\n",
      "long 0.00166 0.00870: 2018-08-27: 0.997166080552475\n",
      "long 0.00083 -0.0199: 2018-09-11: 0.9969992256855903\n",
      "long 0.00322 0.03600: 2018-09-25: 0.9981563787941458\n",
      "shorted -0.0005 0.04959: 2018-10-09: 0.9978646072480404\n",
      "long 0.00911 -0.0016: 2018-10-23: 0.9977173650575393\n",
      "shorted -0.0064 0.04489: 2018-11-06: 0.9948269313547914\n",
      "shorted -0.0095 -0.0219: 2018-11-20: 0.996927274882823\n",
      "shorted -0.0076 0.07764: 2018-12-06: 0.9910177792992824\n",
      "shorted -0.0099 -0.0316: 2018-12-20: 0.9941425586308982\n",
      "long 0.00260 0.06643: 2018-01-24: 1.0017310756344922\n",
      "long 0.00435 -0.0155: 2018-02-07: 1.0010509039645876\n",
      "long 0.00282 -0.0122: 2018-02-22: 1.0007062008567784\n",
      "shorted -0.0005 0.03879: 2018-03-08: 1.0004876529102884\n",
      "shorted -0.0077 0.01670: 2018-03-22: 0.9991951593601527\n",
      "shorted -0.0079 -0.0270: 2018-04-06: 1.0013380603412063\n",
      "shorted -0.0045 0.02961: 2018-04-20: 0.9999821526729704\n",
      "long 0.00246 -0.0044: 2018-05-04: 0.9998733396269611\n",
      "long 0.00205 -0.0064: 2018-05-18: 0.9997409015513874\n",
      "shorted -0.0010 0.00039: 2018-06-04: 0.9997367264924624\n",
      "shorted -0.0007 0.01559: 2018-06-18: 0.9996250989988366\n",
      "shorted -0.0094 -0.0334: 2018-07-02: 1.0027711916569186\n",
      "shorted -0.0049 -0.0056: 2018-07-17: 1.0030507719723984\n",
      "shorted -0.0019 0.02137: 2018-07-31: 1.0026385688435884\n",
      "long 0.00344 -0.0512: 2018-08-14: 1.0008652535365246\n",
      "long 0.00379 0.00872: 2018-08-28: 1.00119630539571\n",
      "long 0.00066 -0.0122: 2018-09-12: 1.0011140960899707\n",
      "shorted -0.0008 0.05896: 2018-09-26: 1.0006080943800346\n",
      "shorted -0.0004 0.05793: 2018-10-10: 1.0003258515225777\n",
      "long 0.00851 -0.0620: 2018-10-24: 0.9950342727501195\n",
      "shorted -0.0045 0.06044: 2018-11-07: 0.9922991820710039\n",
      "shorted -0.0061 0.00592: 2018-11-21: 0.991934816380316\n",
      "shorted -0.0102 0.08745: 2018-12-07: 0.9830157670948428\n",
      "shorted -0.0130 -0.0730: 2018-12-21: 0.9923788397314288\n",
      "long 0.00408 0.10275: 2018-01-25: 1.0041933760905184\n",
      "long 0.00135 -0.0699: 2018-02-08: 1.0032433438958237\n",
      "long 0.00300 -0.0163: 2018-02-23: 1.0027502591766357\n",
      "long 0.00343 0.07096: 2018-03-09: 1.0051978419452336\n",
      "shorted -0.0073 -0.0088: 2018-03-23: 1.0058540618838667\n",
      "shorted -0.0116 -0.0122: 2018-04-09: 1.007290869297797\n",
      "shorted -0.0049 0.02274: 2018-04-23: 1.006151946545612\n",
      "long 0.00298 -0.0129: 2018-05-07: 1.0057625600430693\n",
      "long 0.00389 -7.9196: 2018-05-21: 1.005759461469522\n",
      "shorted -0.0023 0.00967: 2018-06-05: 1.0055266177591065\n",
      "shorted -0.0008 0.01090: 2018-06-19: 1.0054287210466988\n",
      "shorted -0.0069 -0.0359: 2018-07-03: 1.007946538110113\n",
      "shorted -0.0069 -0.0010: 2018-07-18: 1.008018851893457\n",
      "long 0.00074 0.02435: 2018-08-01: 1.008202423145383\n",
      "long 0.00043 -0.0653: 2018-08-15: 1.007912347377968\n",
      "long 0.00444 0.00386: 2018-08-29: 1.0080857022128997\n",
      "shorted -0.0012 0.00457: 2018-09-13: 1.0080278423259297\n",
      "shorted -0.0014 0.06778: 2018-09-27: 1.0070477194016216\n",
      "long 0.00380 0.02692: 2018-10-11: 1.008078503785098\n",
      "long 0.00548 -0.0375: 2018-10-25: 1.0060022478601998\n",
      "long 0.00102 0.06342: 2018-11-08: 1.0066551128001\n",
      "shorted -0.0093 -0.0045: 2018-11-23: 1.0070884721824134\n",
      "shorted -0.0115 0.10894: 2018-12-10: 0.9944613722634522\n",
      "shorted -0.0154 -0.1132: 2018-12-24: 1.0118318105828004\n",
      "long 0.00683 0.10279: 2018-01-26: 1.007023872778183\n",
      "long 0.00693 -0.0694: 2018-02-09: 1.0021772742273312\n",
      "shorted -0.0003 -0.0037: 2018-02-26: 1.002189216236827\n",
      "shorted -0.0002 0.03951: 2018-03-12: 1.002103260641675\n",
      "shorted -0.0051 0.00694: 2018-03-26: 1.0017448028043672\n",
      "shorted -0.0128 0.01819: 2018-04-10: 0.9993946948386424\n",
      "shorted -0.0039 0.01596: 2018-04-24: 0.9987625670646969\n",
      "long 0.00247 -0.0140: 2018-05-08: 0.998414009546811\n",
      "long 0.00408 -0.0169: 2018-05-22: 0.997721259751276\n",
      "shorted -0.0022 0.02246: 2018-06-06: 0.9972216952383041\n",
      "shorted -0.0008 0.00029: 2018-06-20: 0.9972192106394611\n",
      "shorted -0.0069 -0.0211: 2018-07-05: 0.998687393935302\n",
      "shorted -0.0096 -0.0035: 2018-07-19: 0.9990287207096025\n",
      "long 0.00234 0.01239: 2018-08-02: 0.9993195502706019\n",
      "long 0.00146 -0.0471: 2018-08-16: 0.9986288662675125\n",
      "long 0.00326 0.00138: 2018-08-30: 0.9986740669739872\n",
      "long 0.00296 0.00241: 2018-09-14: 0.9987454358773592\n",
      "long 1.90576 0.05486: 2018-09-28: 0.9987558793329062\n",
      "shorted -0.0010 0.05224: 2018-10-12: 0.9982308292644646\n",
      "long 0.00383 -0.0408: 2018-10-26: 0.9966706820970063\n",
      "shorted -0.0026 0.03773: 2018-11-09: 0.9956745811413303\n",
      "shorted -0.0038 0.01339: 2018-11-26: 0.9951655900320837\n",
      "shorted -0.0114 0.06478: 2018-12-11: 0.9877582629490838\n",
      "shorted -0.0103 -0.0644: 2018-12-26: 0.9943713273977473\n",
      "long 0.00345 0.07524: 2018-01-29: 1.0025982966179576\n",
      "long 0.00901 -0.0293: 2018-02-12: 0.9999454086865417\n",
      "shorted -0.0012 -0.0210: 2018-02-27: 1.0002050384726215\n",
      "shorted -0.0016 0.05726: 2018-03-13: 0.9992538039248696\n",
      "shorted -0.0092 -0.0092: 2018-03-27: 1.0001143020599037\n",
      "shorted -0.0066 0.01743: 2018-04-11: 0.998946073520033\n",
      "shorted -0.0025 0.00388: 2018-04-25: 0.9988454285819106\n",
      "long 0.00354 -0.0010: 2018-05-09: 0.9988082459203969\n",
      "long 0.00120 -0.0233: 2018-05-23: 0.998526879664651\n",
      "shorted -0.0004 0.02815: 2018-06-07: 0.9983926984948654\n",
      "shorted -0.0031 -0.0167: 2018-06-21: 0.998920894835835\n",
      "shorted -0.0067 -0.0131: 2018-07-06: 0.9998083139723506\n",
      "shorted -0.0070 -0.0007: 2018-07-20: 0.9998626209245294\n",
      "long 0.00338 0.00618: 2018-08-03: 1.0000720662951597\n",
      "shorted -0.0019 -0.0325: 2018-08-17: 1.000710467402841\n",
      "long 0.00509 -0.0036: 2018-08-31: 1.0005257713081839\n",
      "long 0.00175 0.00096: 2018-09-17: 1.000542790299306\n",
      "long 7.23994 0.05928: 2018-10-01: 1.00058573814561\n",
      "long 0.00144 0.05647: 2018-10-15: 1.0014023877604006\n",
      "long 0.00193 -0.0192: 2018-10-29: 1.0010298928490442\n",
      "shorted -0.0052 0.00912: 2018-11-12: 1.0005472797087456\n",
      "shorted -0.0039 0.00384: 2018-11-27: 1.0003942846142058\n",
      "shorted -0.0087 0.05993: 2018-12-12: 0.995168213551422\n",
      "shorted -0.0110 -0.0472: 2018-12-27: 1.0003590017115436\n",
      "long 0.00624 0.05990: 2018-01-30: 1.0037435167011641\n",
      "long 0.00753 -0.0083: 2018-02-13: 1.0031088043741403\n",
      "shorted -0.0018 -0.0273: 2018-02-28: 1.0036059919146874\n",
      "shorted -0.0027 0.06101: 2018-03-14: 1.0019469605397033\n",
      "shorted -0.0088 -0.0249: 2018-03-28: 1.004163605322066\n",
      "shorted -0.0080 0.01705: 2018-04-12: 1.0027865336593496\n",
      "long 0.00214 -0.0057: 2018-04-26: 1.002663600259987\n",
      "long 0.00475 0.01369: 2018-05-10: 1.0033166861990659\n",
      "shorted -2.4291 -0.0237: 2018-05-24: 1.0033224729744936\n",
      "long 0.00125 0.02193: 2018-06-08: 1.003599007820857\n",
      "shorted -0.0050 -0.0196: 2018-06-22: 1.004590795489156\n",
      "shorted -0.0075 -0.0032: 2018-07-09: 1.0048348072065267\n",
      "shorted -0.0064 -0.0036: 2018-07-23: 1.0050732167515255\n",
      "long 0.00313 0.00261: 2018-08-06: 1.0051558829034861\n",
      "shorted -0.0043 -0.0232: 2018-08-20: 1.0061815792513056\n",
      "long 0.00650 -0.0112: 2018-09-04: 1.005448422840531\n",
      "long 0.00318 0.00815: 2018-09-18: 1.0057091890615968\n",
      "long 8.88753 0.03608: 2018-10-02: 1.0057414407070613\n",
      "long 0.00036 0.06518: 2018-10-16: 1.0059836262445978\n",
      "long 0.00260 -0.0111: 2018-10-30: 1.0056911242624929\n",
      "shorted -0.0082 -0.0159: 2018-11-13: 1.0070088822289405\n",
      "shorted -0.0037 0.03354: 2018-11-28: 1.0057481769127952\n",
      "shorted -0.0080 0.05957: 2018-12-13: 1.0009078389275479\n",
      "shorted -0.0133 -0.0419: 2018-12-28: 1.006509925914187\n",
      "average\n",
      "1.000921872280063\n",
      "jp\n",
      "long 0.00226 -0.0269: 2018-01-17: 0.999388668464185\n",
      "long 0.00622 0.02379: 2018-01-31: 1.000869382572116\n",
      "long 0.01053 -0.0002: 2018-02-14: 1.0008400857713582\n",
      "long 0.00350 -0.0263: 2018-03-01: 0.9999173626443587\n",
      "shorted -0.0061 0.04393: 2018-03-15: 0.997207066422909\n",
      "shorted -0.0117 0.00094: 2018-03-29: 0.9970956081504757\n",
      "shorted -0.0162 0.01061: 2018-04-13: 0.9953770544622266\n",
      "shorted -0.0069 -0.0204: 2018-04-27: 0.9967929509991094\n",
      "shorted -0.0025 0.00256: 2018-05-11: 0.9967276484257243\n",
      "shorted -0.0081 -0.0177: 2018-05-25: 0.9981603189656321\n",
      "shorted -0.0068 0.02486: 2018-06-11: 0.996448594141218\n",
      "shorted -0.0120 -0.0180: 2018-06-25: 0.9986105984487161\n",
      "shorted -0.0137 -0.0079: 2018-07-10: 0.9997011593516518\n",
      "shorted -0.0104 -0.0123: 2018-07-24: 1.000993300889333\n",
      "long 0.00192 -0.0123: 2018-08-07: 1.0007547786471958\n",
      "shorted -0.0045 0.00166: 2018-08-21: 1.0006795755304818\n",
      "long 0.00069 -0.0008: 2018-09-05: 1.0006736738345086\n",
      "long 0.00592 0.01832: 2018-09-19: 1.0017600492313625\n",
      "long 0.00371 0.02221: 2018-10-03: 1.00258617186875\n",
      "shorted -0.0045 0.03758: 2018-10-17: 1.0008805382128334\n",
      "shorted -0.0004 0.00760: 2018-10-31: 1.0008468522398932\n",
      "shorted -0.0109 -0.0152: 2018-11-14: 1.0025216017948753\n",
      "shorted -0.0098 0.04851: 2018-11-29: 0.9977095563575693\n",
      "shorted -0.0141 0.00690: 2018-12-14: 0.9967366938021276\n",
      "shorted -0.0183 -0.0500: 2018-12-31: 1.005894965395605\n",
      "shorted -0.0003 -0.0240: 2018-01-18: 1.0000913627528796\n",
      "long 0.00956 0.00029: 2018-02-01: 1.0001194716968334\n",
      "long 0.01001 0.01098: 2018-02-15: 1.0012196856496645\n",
      "long 0.00458 -0.0164: 2018-03-02: 1.0004636552056334\n",
      "shorted -0.0073 0.05978: 2018-03-16: 0.996072183378775\n",
      "shorted -0.0122 -0.0267: 2018-04-02: 0.9993259071056717\n",
      "shorted -0.0183 0.03127: 2018-04-16: 0.9935912118434173\n",
      "shorted -0.0095 -0.0290: 2018-04-30: 0.9963533467779465\n",
      "shorted -0.0045 0.00639: 2018-05-14: 0.9960658948229001\n",
      "shorted -0.0085 -0.0219: 2018-05-29: 0.9979450475250814\n",
      "shorted -0.0062 0.02334: 2018-06-12: 0.9965001421010583\n",
      "shorted -0.0086 -0.0015: 2018-06-26: 0.9966337002629609\n",
      "shorted -0.0140 -0.0351: 2018-07-11: 1.0015458868098883\n",
      "shorted -0.0095 -0.0050: 2018-07-25: 1.0020261924342524\n",
      "long 0.00544 -0.0062: 2018-08-08: 1.0016839731718965\n",
      "shorted -0.0047 -0.0052: 2018-08-22: 1.001931276698119\n",
      "shorted -0.0017 -0.0030: 2018-09-06: 1.001983360180553\n",
      "long 0.00759 0.02672: 2018-09-20: 1.0040164309650146\n",
      "long 0.00167 0.02986: 2018-10-04: 1.004519400225999\n",
      "long 0.00042 0.01517: 2018-10-18: 1.004584800255493\n",
      "shorted -0.0003 0.00995: 2018-11-01: 1.0045488121464685\n",
      "shorted -0.0145 -0.0111: 2018-11-15: 1.0061737191186009\n",
      "shorted -0.0118 0.06796: 2018-11-30: 0.9980800893629871\n",
      "shorted -0.0155 -0.0147: 2018-12-17: 1.0003601960371769\n",
      "long 0.00087 0.01164: 2018-01-19: 1.000102230568799\n",
      "long 0.01070 -0.0260: 2018-02-02: 0.9973166707233322\n",
      "long 0.00432 0.00233: 2018-02-16: 0.9974174172544571\n",
      "long 0.00392 0.00520: 2018-03-05: 0.99762137848172\n",
      "shorted -0.0083 0.04083: 2018-03-19: 0.994224323004701\n",
      "shorted -0.0135 -0.0324: 2018-04-03: 0.9986051063295799\n",
      "shorted -0.0167 0.04601: 2018-04-17: 0.9909147756957782\n",
      "shorted -0.0065 -0.0186: 2018-05-01: 0.9921301458804476\n",
      "shorted -0.0057 -0.0186: 2018-05-15: 0.9931934097564101\n",
      "shorted -0.0072 -0.0067: 2018-05-30: 0.9936824193547036\n",
      "shorted -0.0070 0.03049: 2018-06-13: 0.9915375877870288\n",
      "shorted -0.0109 -0.0163: 2018-06-27: 0.9933102129091018\n",
      "shorted -0.0147 -0.0261: 2018-07-12: 0.9971369407995336\n",
      "shorted -0.0083 -0.0073: 2018-07-26: 0.9977498502086852\n",
      "long 0.00738 -0.0005: 2018-08-09: 0.9977096571064543\n",
      "shorted -0.0060 -0.0083: 2018-08-23: 0.9982140475755974\n",
      "shorted -0.0017 -0.0017: 2018-09-07: 0.9982448486007889\n",
      "long 0.00767 0.02440: 2018-09-21: 1.0001142657156432\n",
      "long 0.00012 0.02991: 2018-10-05: 1.0001505512411815\n",
      "long 0.00227 0.02155: 2018-10-19: 1.000640319584322\n",
      "shorted -0.0033 -0.0100: 2018-11-02: 1.0009764596407207\n",
      "shorted -0.0139 -0.0129: 2018-11-16: 1.0027751724182183\n",
      "shorted -0.0094 0.07668: 2018-12-03: 0.9955380037250957\n",
      "shorted -0.0178 -0.0005: 2018-12-18: 0.9956401392273341\n",
      "long 0.00029 0.05004: 2018-01-22: 1.0001461523882225\n",
      "long 0.00677 -0.0446: 2018-02-05: 0.9971239762590879\n",
      "long 0.00399 -0.0167: 2018-02-20: 0.9964578145308882\n",
      "long 0.00713 0.01093: 2018-03-06: 0.997235489408852\n",
      "shorted -0.0057 0.02962: 2018-03-20: 0.9955286782922205\n",
      "shorted -0.0136 -0.0217: 2018-04-04: 0.9984797042212695\n",
      "shorted -0.0171 0.05093: 2018-04-18: 0.9897467881444826\n",
      "shorted -0.0068 -0.0293: 2018-05-02: 0.9917378532071539\n",
      "shorted -0.0075 -0.0094: 2018-05-16: 0.9924414425969892\n",
      "shorted -0.0067 -0.0121: 2018-05-31: 0.9932498495912321\n",
      "shorted -0.0068 0.02695: 2018-06-14: 0.9914120198043981\n",
      "shorted -0.0131 -0.0151: 2018-06-28: 0.9933843458207845\n",
      "shorted -0.0150 -0.0183: 2018-07-13: 0.9961413742221934\n",
      "shorted -0.0062 -0.0071: 2018-07-27: 0.996584677442176\n",
      "long 0.00658 -0.0127: 2018-08-10: 0.9957476598059006\n",
      "shorted -0.0038 -0.0030: 2018-08-24: 0.9958636206343112\n",
      "shorted -0.0032 0.00507: 2018-09-10: 0.9956999536785849\n",
      "long 0.00824 0.01471: 2018-09-24: 0.996908337260849\n",
      "shorted -0.0004 0.04097: 2018-10-08: 0.9967242707576021\n",
      "long 0.00478 0.00908: 2018-10-22: 0.9971577354543856\n",
      "shorted -0.0050 0.01012: 2018-11-05: 0.9966497051371312\n",
      "shorted -0.0138 -0.0023: 2018-11-19: 0.9969701782601514\n",
      "shorted -0.0114 0.06760: 2018-12-04: 0.9892335012554546\n",
      "shorted -0.0183 -0.0396: 2018-12-19: 0.9964169354755182\n",
      "shorted -8.2697 0.04318: 2018-01-23: 0.9999642868322082\n",
      "long 0.00876 -0.0196: 2018-02-06: 0.998240787313832\n",
      "long 0.00606 -0.0258: 2018-02-21: 0.9966748647393762\n",
      "long 0.00352 0.00842: 2018-03-07: 0.9969707528648443\n",
      "shorted -0.0076 0.03015: 2018-03-21: 0.994672388148085\n",
      "shorted -0.0122 -0.0122: 2018-04-05: 0.9961676773955347\n",
      "shorted -0.0176 0.04017: 2018-04-19: 0.9891145276416469\n",
      "shorted -0.0065 -0.0212: 2018-05-03: 0.9904923609749561\n",
      "shorted -0.0081 -0.0168: 2018-05-17: 0.9918525145618395\n",
      "shorted -0.0058 -0.0026: 2018-06-01: 0.9920085615834202\n",
      "shorted -0.0114 0.02119: 2018-06-15: 0.989608319832148\n",
      "shorted -0.0138 -0.0150: 2018-06-29: 0.991670293354195\n",
      "shorted -0.0136 -0.0131: 2018-07-16: 0.9934430055479238\n",
      "shorted -0.0030 -0.0107: 2018-07-30: 0.993767985124047\n",
      "long 0.00364 -0.0240: 2018-08-13: 0.9928972454077691\n",
      "shorted -0.0001 0.00756: 2018-08-27: 0.9928851678685935\n",
      "shorted -0.0012 0.00603: 2018-09-11: 0.9928108607317978\n",
      "long 0.00496 0.01134: 2018-09-25: 0.9933700733605332\n",
      "shorted -0.0010 0.04346: 2018-10-09: 0.992896385553124\n",
      "long 0.00647 0.00337: 2018-10-23: 0.9931133960537786\n",
      "shorted -0.0069 0.03407: 2018-11-06: 0.9907581121264252\n",
      "shorted -0.0147 -0.0225: 2018-11-20: 0.994058749089022\n",
      "shorted -0.0123 0.07167: 2018-12-06: 0.9852656702314521\n",
      "shorted -0.0172 -0.0521: 2018-12-20: 0.9941549849735329\n",
      "long 0.00410 0.05577: 2018-01-24: 1.0022900435427013\n",
      "long 0.00742 -0.0337: 2018-02-07: 0.9997755916516519\n",
      "long 0.00404 -0.0188: 2018-02-22: 0.9990131645659869\n",
      "long 0.00283 0.02938: 2018-03-08: 0.9998445250339788\n",
      "shorted -0.0108 0.03065: 2018-03-22: 0.9965060718181193\n",
      "shorted -0.0128 -0.0196: 2018-04-06: 0.9990209511135434\n",
      "shorted -0.0165 0.01568: 2018-04-20: 0.9964327442271861\n",
      "shorted -0.0026 -0.0050: 2018-05-04: 0.9965664896971704\n",
      "shorted -0.0091 -0.0216: 2018-05-18: 0.9985312365537172\n",
      "shorted -0.0071 0.00070: 2018-06-04: 0.9984810340498452\n",
      "shorted -0.0092 0.02007: 2018-06-18: 0.9966327578835418\n",
      "shorted -0.0135 -0.0138: 2018-07-02: 0.9984994759216972\n",
      "shorted -0.0120 -0.0118: 2018-07-17: 0.9999284972251534\n",
      "shorted -0.0051 -0.0155: 2018-07-31: 1.0007326758891388\n",
      "long 0.00257 -0.0209: 2018-08-14: 1.0001939593830558\n",
      "long 0.00309 0.00347: 2018-08-28: 1.0003017557901583\n",
      "shorted -0.0012 0.01049: 2018-09-12: 1.000166053569191\n",
      "long 0.00237 0.03595: 2018-09-26: 1.001021472563377\n",
      "shorted -0.0022 0.04646: 2018-10-10: 0.9999897275150244\n",
      "long 0.00692 -0.0478: 2018-10-24: 0.9966758998870155\n",
      "shorted -0.0071 0.05276: 2018-11-07: 0.9929019474927773\n",
      "shorted -0.0102 0.00255: 2018-11-21: 0.9926432646570972\n",
      "shorted -0.0150 0.07337: 2018-12-07: 0.9817057620567161\n",
      "shorted -0.0206 -0.0889: 2018-12-21: 0.9997703908889936\n",
      "long 0.00661 0.08457: 2018-01-25: 1.0055989090824484\n",
      "long 0.00212 -0.0834: 2018-02-08: 1.003816770061533\n",
      "long 0.00725 -0.0159: 2018-02-23: 1.0026531654618038\n",
      "long 0.00392 0.05537: 2018-03-09: 1.0048340732810526\n",
      "shorted -0.0102 0.00794: 2018-03-23: 1.0040151293084174\n",
      "shorted -0.0151 -0.0031: 2018-04-09: 1.0044988973633433\n",
      "shorted -0.0179 0.00218: 2018-04-23: 1.0041048027976045\n",
      "shorted -0.0018 -0.0061: 2018-05-07: 1.0042210123013928\n",
      "shorted -0.0069 -0.0176: 2018-05-21: 1.0054573040406645\n",
      "shorted -0.0094 0.00091: 2018-06-05: 1.0053700104625132\n",
      "shorted -0.0078 0.02151: 2018-06-19: 1.0036685863156887\n",
      "shorted -0.0130 -0.0169: 2018-07-03: 1.0058891922713378\n",
      "shorted -0.0138 -0.0093: 2018-07-18: 1.0072000439426403\n",
      "shorted -0.0023 -0.0119: 2018-08-01: 1.007478544056683\n",
      "long 0.00080 -0.0261: 2018-08-15: 1.0072674175154077\n",
      "long 0.00147 0.00446: 2018-08-29: 1.007333992802919\n",
      "shorted -0.0011 0.01352: 2018-09-13: 1.0071731659869374\n",
      "long 0.00234 0.05303: 2018-09-27: 1.0084232245555147\n",
      "shorted -6.0787 0.00990: 2018-10-11: 1.0084171510660427\n",
      "long 0.00741 -0.0239: 2018-10-25: 1.006622186658716\n",
      "shorted -0.0029 0.05176: 2018-11-08: 1.0050736113754328\n",
      "shorted -0.0135 0.00033: 2018-11-23: 1.005027668668984\n",
      "shorted -0.0166 0.08708: 2018-12-10: 0.9904119115905079\n",
      "shorted -0.0233 -0.1214: 2018-12-24: 1.0185178437720084\n",
      "long 0.01064 0.08825: 2018-01-26: 1.0093907341611912\n",
      "long 0.00795 -0.0798: 2018-02-09: 1.00298599458259\n",
      "long 0.00302 -0.0070: 2018-02-26: 1.0027705474095607\n",
      "long 0.00143 0.03865: 2018-03-12: 1.0033272922609249\n",
      "shorted -0.0083 0.01683: 2018-03-26: 1.0019196822396783\n",
      "shorted -0.0169 0.02329: 2018-04-10: 0.9979577200931652\n",
      "shorted -0.0169 -0.0122: 2018-04-24: 1.0000292407867681\n",
      "shorted -0.0023 -0.0050: 2018-05-08: 1.0001494342819015\n",
      "shorted -0.0069 -0.0240: 2018-05-22: 1.0018208760412033\n",
      "shorted -0.0096 0.00687: 2018-06-06: 1.0011542252875878\n",
      "shorted -0.0095 0.01271: 2018-06-20: 0.9999441112259737\n",
      "shorted -0.0143 -0.0085: 2018-07-05: 1.0011612260844838\n",
      "shorted -0.0150 -0.0157: 2018-07-19: 1.0035260465283056\n",
      "shorted -0.0011 -0.0128: 2018-08-02: 1.0036715637303038\n",
      "long 0.00293 -0.0211: 2018-08-16: 1.003049170474578\n",
      "shorted -0.0003 0.00773: 2018-08-30: 1.0030201137498551\n",
      "long 0.00303 0.01509: 2018-09-14: 1.0034789746784964\n",
      "long 0.00309 0.03769: 2018-09-28: 1.0046484492472894\n",
      "shorted -0.0037 0.03590: 2018-10-12: 1.003306294777306\n",
      "long 0.00573 -0.0296: 2018-10-26: 1.001596608859918\n",
      "shorted -0.0057 0.03482: 2018-11-09: 0.9995947749252388\n",
      "shorted -0.0097 0.01083: 2018-11-26: 0.9985382949436381\n",
      "shorted -0.0158 0.05005: 2018-12-11: 0.990612070160954\n",
      "shorted -0.0178 -0.0779: 2018-12-26: 1.0044173585093137\n",
      "long 0.00849 0.06527: 2018-01-29: 1.0055430304588284\n",
      "long 0.00934 -0.0464: 2018-02-12: 1.0011719568685553\n",
      "long 0.00222 -0.0153: 2018-02-27: 1.000830146783097\n",
      "long 6.09023 0.04661: 2018-03-13: 1.0008585626186122\n",
      "shorted -0.0119 0.00173: 2018-03-27: 1.0006511476241846\n",
      "shorted -0.0148 0.02502: 2018-04-11: 0.9969286591810672\n",
      "shorted -0.0142 -0.0192: 2018-04-25: 0.9996613471113863\n",
      "shorted -0.0029 -0.0113: 2018-05-09: 1.0000003943286058\n",
      "shorted -0.0087 -0.0181: 2018-05-23: 1.001578547309538\n",
      "shorted -0.0084 0.01401: 2018-06-07: 1.0003911172001623\n",
      "shorted -0.0103 -0.0001: 2018-06-21: 1.000403597000986\n",
      "shorted -0.0130 -0.0068: 2018-07-06: 1.0012999832950304\n",
      "shorted -0.0128 -0.0152: 2018-07-20: 1.0032703699639922\n",
      "long 0.00188 -0.0120: 2018-08-03: 1.0030426178530747\n",
      "shorted -0.0018 -0.0135: 2018-08-17: 1.003296567903294\n",
      "long 0.00084 0.01054: 2018-08-31: 1.003385666616354\n",
      "long 0.00230 0.01033: 2018-09-17: 1.0036248693109568\n",
      "long 0.00188 0.04061: 2018-10-01: 1.0043924597168858\n",
      "shorted -0.0012 0.04377: 2018-10-15: 1.0038522318960372\n",
      "long 0.00391 -0.0201: 2018-10-29: 1.0030620851378718\n",
      "shorted -0.0098 0.01485: 2018-11-12: 1.001590680582356\n",
      "shorted -0.0092 0.00655: 2018-11-27: 1.0009841344306618\n",
      "shorted -0.0130 0.04538: 2018-12-12: 0.9950496396504325\n",
      "shorted -0.0166 -0.0660: 2018-12-27: 1.0059712020352305\n",
      "long 0.01065 0.04720: 2018-01-30: 1.0050278180824899\n",
      "long 0.00852 -0.0319: 2018-02-13: 1.0022868765889896\n",
      "long 0.00082 -0.0166: 2018-02-28: 1.002149391597987\n",
      "shorted -0.0011 0.06117: 2018-03-14: 1.0014567328713155\n",
      "shorted -0.0114 -0.0190: 2018-03-28: 1.0036440222392906\n",
      "shorted -0.0176 0.01701: 2018-04-12: 1.0006357641262382\n",
      "shorted -0.0065 -0.0207: 2018-04-26: 1.0020018171135223\n",
      "shorted -0.0026 -0.0041: 2018-05-10: 1.002112906584939\n",
      "shorted -0.0092 -0.0170: 2018-05-24: 1.003692543075992\n",
      "shorted -0.0065 0.01623: 2018-06-08: 1.0026296276803668\n",
      "shorted -0.0101 -0.0034: 2018-06-22: 1.0029848218832642\n",
      "shorted -0.0158 -0.0038: 2018-07-09: 1.0035978514212347\n",
      "shorted -0.0113 -0.0152: 2018-07-23: 1.005325192035285\n",
      "long 0.00171 -0.0156: 2018-08-06: 1.0050560647030866\n",
      "shorted -0.0051 -0.0019: 2018-08-20: 1.0051571192916242\n",
      "long 0.00254 0.00436: 2018-09-04: 1.005268983460835\n",
      "long 0.00401 0.00942: 2018-09-18: 1.0056490911943239\n",
      "long 0.00077 0.02578: 2018-10-02: 1.0058510582244575\n",
      "shorted -0.0011 0.05252: 2018-10-16: 1.0052581717358455\n",
      "long 0.00246 -0.0096: 2018-10-30: 1.00501855968524\n",
      "shorted -0.0121 -0.0103: 2018-11-13: 1.0062811389085908\n",
      "shorted -0.0080 0.03310: 2018-11-28: 1.0035840900608173\n",
      "shorted -0.0124 0.03683: 2018-12-13: 0.9989754145352602\n",
      "shorted -0.0183 -0.0580: 2018-12-28: 1.009626177135025\n",
      "average\n",
      "1.0030770193449738\n",
      "gld\n",
      "shorted -0.0078 -0.0052: 2018-01-17: 1.0004118821818384\n",
      "shorted -0.0092 0.05476: 2018-01-31: 0.9953572008417672\n",
      "shorted -0.0174 -0.0318: 2018-02-14: 1.0009077617263689\n",
      "shorted -0.0104 -0.0176: 2018-03-01: 1.002743262433971\n",
      "shorted -0.0053 0.05029: 2018-03-15: 1.0000593693146038\n",
      "shorted -0.0076 0.00792: 2018-03-29: 0.9994540632178899\n",
      "shorted -0.0105 -0.0234: 2018-04-13: 1.0019206237363485\n",
      "shorted -0.0027 -0.0256: 2018-04-27: 1.0026184207039626\n",
      "long 0.00940 -0.0103: 2018-05-11: 1.0016468088357942\n",
      "long 0.00734 -0.0239: 2018-05-25: 0.9998853992161313\n",
      "long 0.00410 0.00081: 2018-06-11: 0.9999190841555625\n",
      "long 0.00371 -0.0397: 2018-06-25: 0.9984394513350731\n",
      "long 0.01299 -0.0335: 2018-07-10: 0.9940874067267049\n",
      "long 0.01737 -0.0199: 2018-07-24: 0.9906373020524598\n",
      "long 0.02153 -0.0176: 2018-08-07: 0.9868655775462478\n",
      "long 0.01522 -0.0083: 2018-08-21: 0.985616763800353\n",
      "long 0.01822 -0.0017: 2018-09-05: 0.9853023446112448\n",
      "long 0.01408 -0.0061: 2018-09-19: 0.9844436159185063\n",
      "long 0.01426 0.05900: 2018-10-03: 0.9927278481604538\n",
      "long 0.00127 0.02491: 2018-10-17: 0.9930435074678707\n",
      "long 0.00245 -0.0024: 2018-10-31: 0.9929838588877506\n",
      "shorted -0.0055 0.00278: 2018-11-14: 0.9928295221514568\n",
      "shorted -0.0004 0.05825: 2018-11-29: 0.9925673561604704\n",
      "long 0.00169 0.07264: 2018-12-14: 0.9937931314991849\n",
      "shorted -0.0075 -0.0361: 2018-12-31: 0.9965095405669467\n",
      "shorted -0.0113 0.00685: 2018-01-18: 0.9992221397850567\n",
      "shorted -0.0125 0.03585: 2018-02-01: 0.99472483045679\n",
      "shorted -0.0152 -0.0090: 2018-02-15: 0.9960975353928695\n",
      "shorted -0.0096 -0.0274: 2018-03-02: 0.9987220424391114\n",
      "shorted -0.0064 0.08737: 2018-03-16: 0.99309092545511\n",
      "shorted -0.0108 -0.0354: 2018-04-02: 0.9968961594869049\n",
      "shorted -0.0106 -0.0127: 2018-04-16: 0.9982461615336069\n",
      "long 0.00186 -0.0327: 2018-04-30: 0.9976367274723055\n",
      "long 0.00754 0.00191: 2018-05-14: 0.9977807223901447\n",
      "long 0.01045 -0.0384: 2018-05-29: 0.9937641155579104\n",
      "long 0.00415 -0.0041: 2018-06-12: 0.9935924540600284\n",
      "long 0.00885 -0.0316: 2018-06-26: 0.990806862567702\n",
      "long 0.01327 -0.0359: 2018-07-11: 0.9860786734998371\n",
      "long 0.01537 -0.0138: 2018-07-25: 0.9839750651973067\n",
      "long 0.02126 -0.0169: 2018-08-08: 0.9804208660935775\n",
      "long 0.01373 -0.0061: 2018-08-22: 0.9795965795965634\n",
      "long 0.01711 -0.0129: 2018-09-06: 0.9774172576214828\n",
      "long 0.01256 0.00609: 2018-09-20: 0.9781658853710562\n",
      "long 0.01107 0.06877: 2018-10-04: 0.9856186346481252\n",
      "long 0.00339 0.01736: 2018-10-18: 0.9861996868696252\n",
      "long 0.00145 -0.0172: 2018-11-01: 0.9859527830210507\n",
      "shorted -0.0044 -0.0005: 2018-11-15: 0.9859784569775629\n",
      "long 0.00118 0.09465: 2018-11-30: 0.987080864940954\n",
      "shorted -0.0039 0.04608: 2018-12-17: 0.9852698797510778\n",
      "shorted -0.0109 0.02083: 2018-01-19: 0.9977166582644458\n",
      "shorted -0.0150 0.02262: 2018-02-02: 0.9943181312262085\n",
      "shorted -0.0154 -0.0233: 2018-02-16: 0.9979223206507637\n",
      "shorted -0.0094 0.00465: 2018-03-05: 0.9974845811054781\n",
      "shorted -0.0091 0.05073: 2018-03-19: 0.992861880243245\n",
      "shorted -0.0087 -0.0270: 2018-04-03: 0.995210601756573\n",
      "shorted -0.0083 -0.0123: 2018-04-17: 0.9962381950560565\n",
      "long 0.00356 -0.0357: 2018-05-01: 0.9949693382653189\n",
      "long 0.00583 0.00698: 2018-05-15: 0.995374577642823\n",
      "long 0.01123 -0.0238: 2018-05-30: 0.9927071515044937\n",
      "long 0.00449 -0.0035: 2018-06-13: 0.992550435681747\n",
      "long 0.00993 -0.0447: 2018-06-27: 0.9881358228692628\n",
      "long 0.01323 -0.0309: 2018-07-12: 0.9840848147009869\n",
      "long 0.01583 -0.0108: 2018-07-26: 0.9823960803564493\n",
      "long 0.02172 -0.0237: 2018-08-09: 0.9773252531715052\n",
      "long 0.01433 -0.0009: 2018-08-23: 0.9771889502067307\n",
      "long 0.01709 -0.0145: 2018-09-07: 0.9747639472313979\n",
      "long 0.01279 0.01786: 2018-09-21: 0.9769907116318108\n",
      "long 0.00945 0.05935: 2018-10-05: 0.9824756605377253\n",
      "long 0.00290 0.01952: 2018-10-19: 0.9830331914388551\n",
      "shorted -5.0593 -0.0151: 2018-11-02: 0.9830407108670183\n",
      "shorted -0.0047 -0.0067: 2018-11-16: 0.9833573714450067\n",
      "long 0.00382 0.09801: 2018-12-03: 0.9870454966820412\n",
      "shorted -0.0059 0.07547: 2018-12-18: 0.9825961586859632\n",
      "shorted -0.0106 0.06981: 2018-01-22: 0.9925752027954745\n",
      "shorted -0.0196 -0.0322: 2018-02-05: 0.9988781880779303\n",
      "shorted -0.0124 -0.0024: 2018-02-20: 0.9991824750885564\n",
      "shorted -0.0096 -0.0103: 2018-03-06: 1.0001830930789377\n",
      "shorted -0.0060 0.04884: 2018-03-20: 0.9972151807973224\n",
      "shorted -0.0075 -0.0159: 2018-04-04: 0.9984218498492518\n",
      "shorted -0.0094 -0.0087: 2018-04-18: 0.9992546050331066\n",
      "long 0.00401 -0.0451: 2018-05-02: 0.9974433332743426\n",
      "long 0.00618 0.01499: 2018-05-16: 0.9983690514362573\n",
      "long 0.01135 -0.0259: 2018-05-31: 0.9954233475655463\n",
      "long 0.01011 -0.0156: 2018-06-14: 0.9938456363162349\n",
      "long 0.00786 -0.0399: 2018-06-28: 0.9907213429203762\n",
      "long 0.01253 -0.0133: 2018-07-13: 0.9890584436178338\n",
      "long 0.01544 -0.0172: 2018-07-27: 0.9864158823354343\n",
      "long 0.02247 -0.0200: 2018-08-10: 0.9819733549505055\n",
      "long 0.01433 -0.0131: 2018-08-24: 0.980118647864117\n",
      "long 0.01337 -0.0063: 2018-09-10: 0.9792928034674077\n",
      "long 0.01175 -0.0021: 2018-09-24: 0.9790483749705311\n",
      "long 0.00898 0.07479: 2018-10-08: 0.9856257374892358\n",
      "long 0.00499 0.01217: 2018-10-22: 0.9862247928496464\n",
      "long 0.00063 0.01001: 2018-11-05: 0.9862878371852903\n",
      "shorted -0.0069 0.01311: 2018-11-19: 0.985386744061993\n",
      "long 0.00106 0.07812: 2018-12-04: 0.9862065128122026\n",
      "shorted -0.0047 0.01890: 2018-12-19: 0.9853299322674522\n",
      "shorted -0.0107 0.04459: 2018-01-23: 0.9951956759981779\n",
      "shorted -0.0168 -0.0014: 2018-02-06: 0.9954402682668803\n",
      "shorted -0.0127 -0.0134: 2018-02-21: 0.9971541980630254\n",
      "shorted -0.0120 0.00402: 2018-03-07: 0.9966709123590202\n",
      "shorted -0.0089 0.02300: 2018-03-21: 0.9946175055711551\n",
      "shorted -0.0054 0.00304: 2018-04-05: 0.9944517823847583\n",
      "shorted -0.0114 -0.0034: 2018-04-19: 0.9948427025694871\n",
      "long 0.00300 -0.0535: 2018-05-03: 0.9932428717879924\n",
      "long 0.00773 0.00183: 2018-05-17: 0.9933835894998029\n",
      "long 0.01166 -0.0289: 2018-06-01: 0.990032808894542\n",
      "long 0.00845 0.00233: 2018-06-15: 0.990228490141949\n",
      "long 0.00675 -0.0415: 2018-06-29: 0.9874529869766904\n",
      "long 0.01337 -0.0087: 2018-07-16: 0.986290773549183\n",
      "long 0.01589 -0.0341: 2018-07-30: 0.9809377930749341\n",
      "long 0.02337 -0.0129: 2018-08-13: 0.9779656085077081\n",
      "long 0.01794 -0.0088: 2018-08-27: 0.9764159243782599\n",
      "long 0.01199 -0.0034: 2018-09-11: 0.9760094478442563\n",
      "long 0.01007 0.00023: 2018-09-25: 0.9760327221077462\n",
      "long 0.00937 0.08600: 2018-10-09: 0.9838981875565447\n",
      "long 0.00611 -0.0140: 2018-10-23: 0.9830552955128405\n",
      "shorted -0.0025 0.03582: 2018-11-06: 0.982166135989382\n",
      "shorted -0.0065 -0.0033: 2018-11-20: 0.9823802609546652\n",
      "long 0.00286 0.10355: 2018-12-06: 0.9852962930365279\n",
      "shorted -0.0078 -0.0118: 2018-12-20: 0.986206559273855\n",
      "shorted -0.0115 0.02402: 2018-01-24: 0.9972330392494819\n",
      "shorted -0.0144 0.00356: 2018-02-07: 0.9967178883685692\n",
      "shorted -0.0117 -0.0219: 2018-02-22: 0.9992919991887971\n",
      "shorted -0.0091 0.04236: 2018-03-08: 0.9954067515130685\n",
      "shorted -0.0109 0.02153: 2018-03-22: 0.9930569717658932\n",
      "shorted -0.0079 -0.0248: 2018-04-06: 0.9950163593440343\n",
      "shorted -0.0086 -0.0154: 2018-04-20: 0.9963488945700486\n",
      "long 0.00718 -0.0377: 2018-05-04: 0.9936449185667484\n",
      "long 0.00696 -0.0085: 2018-05-18: 0.9930559534487825\n",
      "long 0.00888 -0.0192: 2018-06-04: 0.9913529581523036\n",
      "long 0.00898 -0.0130: 2018-06-18: 0.99019413311231\n",
      "long 0.00909 -0.0432: 2018-07-02: 0.9862973407949215\n",
      "long 0.01631 0.00206: 2018-07-17: 0.986630006045299\n",
      "long 0.01546 -0.0358: 2018-07-31: 0.9811663170737466\n",
      "long 0.02165 -0.0097: 2018-08-14: 0.9790851883000916\n",
      "long 0.01755 -0.0001: 2018-08-28: 0.9790641037157515\n",
      "long 0.01154 -0.0123: 2018-09-12: 0.9776655073920576\n",
      "long 0.01059 0.03519: 2018-09-26: 0.9813117509946829\n",
      "long 0.00499 0.07823: 2018-10-10: 0.9851427459789396\n",
      "long 0.00617 -0.0610: 2018-10-24: 0.9814263885767295\n",
      "long 0.00189 0.05633: 2018-11-07: 0.9824754235096799\n",
      "shorted -0.0041 0.02550: 2018-11-21: 0.9814445115194682\n",
      "shorted -0.0013 0.09116: 2018-12-07: 0.980206338624969\n",
      "shorted -0.0121 -0.0446: 2018-12-21: 0.9855246131938469\n",
      "shorted -0.0097 0.05839: 2018-01-25: 0.9942983499536729\n",
      "shorted -0.0204 -0.0577: 2018-02-08: 1.0060644655484632\n",
      "shorted -0.0066 -0.0198: 2018-02-23: 1.0073981066613718\n",
      "shorted -0.0072 0.09422: 2018-03-09: 1.0005119256589696\n",
      "shorted -0.0159 -0.0186: 2018-03-23: 1.0034894880527798\n",
      "shorted -0.0091 -0.0333: 2018-04-09: 1.0065678947337142\n",
      "shorted -0.0065 -0.0087: 2018-04-23: 1.0071434820183243\n",
      "long 0.01019 -0.0418: 2018-05-07: 1.0028479056494266\n",
      "long 0.00575 0.00242: 2018-05-21: 1.0029877487782166\n",
      "long 0.00682 -0.0195: 2018-06-05: 1.0016482884539821\n",
      "long 0.01299 -0.0029: 2018-06-19: 1.0012662577108944\n",
      "long 0.00841 -0.0579: 2018-07-03: 0.9963842134190265\n",
      "long 0.01599 0.00046: 2018-07-18: 0.9964586722315253\n",
      "long 0.01585 -0.0379: 2018-08-01: 0.9904582306006948\n",
      "long 0.02075 -0.0120: 2018-08-15: 0.9879786765366012\n",
      "long 0.02037 -0.0004: 2018-08-29: 0.9878792492490668\n",
      "long 0.01080 -0.0167: 2018-09-13: 0.9860928995007395\n",
      "long 0.01244 0.09756: 2018-09-27: 0.9980636664287046\n",
      "long 0.00123 0.01158: 2018-10-11: 0.998206661399116\n",
      "long 0.00701 -0.0445: 2018-10-25: 0.9950890897693063\n",
      "long 0.00031 0.06272: 2018-11-08: 0.9952870711686287\n",
      "shorted -0.0061 0.01547: 2018-11-23: 0.994345701122483\n",
      "shorted -0.0007 0.13051: 2018-12-10: 0.993352373299513\n",
      "shorted -0.0179 -0.0849: 2018-12-24: 1.0085379451382954\n",
      "shorted -0.0076 0.06059: 2018-01-26: 0.9953569276136753\n",
      "shorted -0.0156 -0.0497: 2018-02-09: 1.0031166900444333\n",
      "shorted -0.0074 -0.0112: 2018-02-26: 1.0039585907972934\n",
      "shorted -0.0082 0.07404: 2018-03-12: 0.997825982646759\n",
      "shorted -0.0143 -0.0068: 2018-03-26: 0.9988073636489128\n",
      "shorted -0.0112 -0.0014: 2018-04-10: 0.9989648644812524\n",
      "shorted -0.0102 -0.0294: 2018-04-24: 1.0019934390376513\n",
      "long 0.00790 -0.0378: 2018-05-08: 0.9989978176709853\n",
      "long 0.00601 -0.0102: 2018-05-22: 0.9983795352806641\n",
      "long 0.00535 -0.0155: 2018-06-06: 0.9975506698874065\n",
      "long 0.01278 0.00032: 2018-06-20: 0.997591527963854\n",
      "long 0.00891 -0.0551: 2018-07-05: 0.9926886171291148\n",
      "long 0.01774 -0.0117: 2018-07-19: 0.9906238567141225\n",
      "long 0.01871 -0.0355: 2018-08-02: 0.9840410385473963\n",
      "long 0.02294 -0.0042: 2018-08-16: 0.983085625105809\n",
      "long 0.01934 -0.0052: 2018-08-30: 0.9820901149486738\n",
      "long 0.01368 -0.0035: 2018-09-14: 0.9816156068360626\n",
      "long 0.01324 0.07237: 2018-09-28: 0.9910243352194823\n",
      "shorted -0.0006 0.04977: 2018-10-12: 0.9906955985034572\n",
      "long 0.00310 -0.0688: 2018-10-26: 0.9885806679201441\n",
      "shorted -0.0011 0.04835: 2018-11-09: 0.9880461970038685\n",
      "shorted -0.0030 0.03288: 2018-11-26: 0.9870433065698128\n",
      "shorted -0.0004 0.08864: 2018-12-11: 0.9866922133740501\n",
      "shorted -0.0111 -0.0402: 2018-12-26: 0.9911219097210661\n",
      "shorted -0.0072 0.05756: 2018-01-29: 0.995834685215319\n",
      "shorted -0.0136 -0.0401: 2018-02-12: 1.001276977531773\n",
      "shorted -0.0088 -0.0018: 2018-02-27: 1.0014445212595535\n",
      "shorted -0.0109 0.06948: 2018-03-13: 0.9938510672325999\n",
      "shorted -0.0148 0.00128: 2018-03-27: 0.9936611832246941\n",
      "shorted -0.0090 -0.0268: 2018-04-11: 0.996072757343767\n",
      "shorted -0.0082 -0.0296: 2018-04-25: 0.9985255688205508\n",
      "long 0.00932 -0.0321: 2018-05-09: 0.9955317327223129\n",
      "long 0.00620 -0.0042: 2018-05-23: 0.9952673051354923\n",
      "long 0.00616 -0.0136: 2018-06-07: 0.9944292345761553\n",
      "long 0.01063 -0.0158: 2018-06-21: 0.992750102469931\n",
      "long 0.01045 -0.0351: 2018-07-06: 0.989104321233162\n",
      "long 0.01746 -0.0204: 2018-07-20: 0.9855750455002754\n",
      "long 0.02315 -0.0370: 2018-08-03: 0.9771236042583035\n",
      "long 0.01856 0.00058: 2018-08-17: 0.9772293584850328\n",
      "long 0.02057 0.00259: 2018-08-31: 0.9777511636008732\n",
      "long 0.01144 -0.0199: 2018-09-17: 0.9755176668708225\n",
      "long 0.01184 0.09179: 2018-10-01: 0.9861259602260141\n",
      "long 0.00106 0.03621: 2018-10-15: 0.9865063611957516\n",
      "long 0.00242 -0.0526: 2018-10-29: 0.9852448134076146\n",
      "shorted -0.0027 0.02352: 2018-11-12: 0.9846132784955103\n",
      "shorted -0.0013 0.04111: 2018-11-27: 0.9840611923387853\n",
      "long 0.00030 0.09038: 2018-12-12: 0.9843337954519477\n",
      "shorted -0.0108 -0.0374: 2018-12-27: 0.9883170450058626\n",
      "shorted -0.0066 0.04876: 2018-01-30: 0.9967765754965107\n",
      "shorted -0.0142 -0.0306: 2018-02-13: 1.0011427685387884\n",
      "shorted -0.0079 -0.0075: 2018-02-28: 1.0017450107162416\n",
      "shorted -0.0091 0.05513: 2018-03-14: 0.9966760137033012\n",
      "shorted -0.0118 -0.0101: 2018-03-28: 0.9978670024875377\n",
      "shorted -0.0109 -0.0193: 2018-04-12: 0.9999801766295459\n",
      "shorted -0.0016 -0.0181: 2018-04-26: 1.0002729289997756\n",
      "long 0.00782 -0.0164: 2018-05-10: 0.9989888870655194\n",
      "long 0.00441 -0.0210: 2018-05-24: 0.9980605078338926\n",
      "long 0.00668 -0.0121: 2018-06-08: 0.997249357910942\n",
      "long 0.00965 -0.0202: 2018-06-22: 0.9953011035620174\n",
      "long 0.00988 -0.0352: 2018-07-09: 0.9918297332212689\n",
      "long 0.01564 -0.0222: 2018-07-23: 0.9883696482182244\n",
      "long 0.02261 -0.0225: 2018-08-06: 0.9833206944743369\n",
      "long 0.01766 -0.0128: 2018-08-20: 0.9810935503664034\n",
      "long 0.01810 0.00146: 2018-09-04: 0.9813545752804852\n",
      "long 0.01314 0.00117: 2018-09-18: 0.9815060549644742\n",
      "long 0.01204 0.05816: 2018-10-02: 0.988379980105923\n",
      "long 0.00286 0.04041: 2018-10-16: 0.9895241606816808\n",
      "long 0.00155 -0.0355: 2018-10-30: 0.9889778328649271\n",
      "shorted -0.0069 0.00921: 2018-11-13: 0.988348947123832\n",
      "long 0.00137 0.05299: 2018-11-28: 0.9890713688945934\n",
      "long 0.00079 0.09493: 2018-12-13: 0.9898189800517141\n",
      "shorted -0.0102 -0.0324: 2018-12-28: 0.9931064115375761\n",
      "average\n",
      "0.9902519995141942\n",
      "all asset average\n",
      "0.9993627430826466\n"
     ]
    }
   ],
   "source": [
    "\n",
    "all_asset_total = 0\n",
    "asset_num = 0\n",
    "\n",
    "for a in aliases_to_use:\n",
    "    if a != baseline_asset :\n",
    "    # and a != \"eu\" and a != \"gld\" and a != \"jp\":\n",
    "        asset_num += 1\n",
    "        test_asset = a\n",
    "        print(test_asset)\n",
    "        \n",
    "        asset_total = 0\n",
    "        \n",
    "        for i in range(pred_distance):\n",
    "            offset = i\n",
    "            count = 0\n",
    "            total = 1\n",
    "            period_counts = 0\n",
    "            for date, pred, actual in zip(df_test[\"Date\"][offset:], preds[test_asset][offset:], actuals[test_asset][offset:]):\n",
    "                if pred != None and not pd.isna(actual):\n",
    "                    if count == 10:\n",
    "                        # if pred > .01:\n",
    "                        if pred > 0:\n",
    "                            total *= (1 + 10 * pred * actual)\n",
    "                            print(\"long \" + str(pred)[0:7] + \" \" + str(actual)[0:7]+ \": \" + str(date) + \": \" + str(total))\n",
    "                        # if pred < -.01:\n",
    "                        if pred < 0:\n",
    "                            total *= (1 + 10 * abs(pred) * -(actual))\n",
    "                            print(\"shorted \" + str(pred)[0:7] + \" \" + str(actual)[0:7] +  \": \" + str(date) + \": \" + str(total))\n",
    "                        period_counts += 1\n",
    "                #         else:\n",
    "                #             total *= (1 + actual)\n",
    "                        \n",
    "                        count = 0\n",
    "                    count += 1\n",
    "                \n",
    "                \n",
    "            # print(offset)\n",
    "            # print(total)\n",
    "            asset_total += total\n",
    "            # print(period_counts)\n",
    "        print(\"average\")\n",
    "        print(asset_total / pred_distance)\n",
    "        all_asset_total += asset_total / pred_distance\n",
    "print(\"all asset average\")\n",
    "print(all_asset_total/ (asset_num))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8269a262-1b0f-4a85-9102-67e07263031d",
   "metadata": {},
   "source": [
    "##### "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a543b5e8-aec8-454f-839d-895491f909e3",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "91ef69b8-cefd-4f3f-b633-63ee8f55e3a8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "703d1804-89b2-4bbc-90d7-952921840070",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a499f26f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
